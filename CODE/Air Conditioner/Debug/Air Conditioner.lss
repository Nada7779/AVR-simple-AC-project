
Air Conditioner.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00001830  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         000000ca  00800060  00001830  000018c4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000000a  0080012a  0080012a  0000198e  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000198e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000019c0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000238  00000000  00000000  000019fc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002dd3  00000000  00000000  00001c34  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000e19  00000000  00000000  00004a07  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000195b  00000000  00000000  00005820  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000004f4  00000000  00000000  0000717c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000bb7  00000000  00000000  00007670  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001e87  00000000  00000000  00008227  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000001b8  00000000  00000000  0000a0ae  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 31 00 	jmp	0x62	; 0x62 <__ctors_end>
       4:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
       8:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
       c:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
      10:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
      14:	0c 94 10 09 	jmp	0x1220	; 0x1220 <__vector_5>
      18:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
      1c:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
      20:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
      24:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
      28:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
      2c:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
      30:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
      34:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
      38:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
      3c:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
      40:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
      44:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
      48:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
      4c:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
      50:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
      54:	b3 08       	sbc	r11, r3
      56:	be 08       	sbc	r11, r14
      58:	d4 08       	sbc	r13, r4
      5a:	c9 08       	sbc	r12, r9
      5c:	df 08       	sbc	r13, r15
      5e:	ea 08       	sbc	r14, r10
      60:	f5 08       	sbc	r15, r5

00000062 <__ctors_end>:
      62:	11 24       	eor	r1, r1
      64:	1f be       	out	0x3f, r1	; 63
      66:	cf e5       	ldi	r28, 0x5F	; 95
      68:	d8 e0       	ldi	r29, 0x08	; 8
      6a:	de bf       	out	0x3e, r29	; 62
      6c:	cd bf       	out	0x3d, r28	; 61

0000006e <__do_copy_data>:
      6e:	11 e0       	ldi	r17, 0x01	; 1
      70:	a0 e6       	ldi	r26, 0x60	; 96
      72:	b0 e0       	ldi	r27, 0x00	; 0
      74:	e0 e3       	ldi	r30, 0x30	; 48
      76:	f8 e1       	ldi	r31, 0x18	; 24
      78:	02 c0       	rjmp	.+4      	; 0x7e <__do_copy_data+0x10>
      7a:	05 90       	lpm	r0, Z+
      7c:	0d 92       	st	X+, r0
      7e:	aa 32       	cpi	r26, 0x2A	; 42
      80:	b1 07       	cpc	r27, r17
      82:	d9 f7       	brne	.-10     	; 0x7a <__do_copy_data+0xc>

00000084 <__do_clear_bss>:
      84:	21 e0       	ldi	r18, 0x01	; 1
      86:	aa e2       	ldi	r26, 0x2A	; 42
      88:	b1 e0       	ldi	r27, 0x01	; 1
      8a:	01 c0       	rjmp	.+2      	; 0x8e <.do_clear_bss_start>

0000008c <.do_clear_bss_loop>:
      8c:	1d 92       	st	X+, r1

0000008e <.do_clear_bss_start>:
      8e:	a4 33       	cpi	r26, 0x34	; 52
      90:	b2 07       	cpc	r27, r18
      92:	e1 f7       	brne	.-8      	; 0x8c <.do_clear_bss_loop>
      94:	0e 94 27 05 	call	0xa4e	; 0xa4e <main>
      98:	0c 94 16 0c 	jmp	0x182c	; 0x182c <_exit>

0000009c <__bad_interrupt>:
      9c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a0 <Start>:
/************************************************************************************************************/
/**DESCRIPTION:-
   This Function displays The Welcome Message And it Stores The Bell Shape In th LCD 
   **/
void Start(void)
{
      a0:	0f 93       	push	r16
      a2:	1f 93       	push	r17
      a4:	cf 93       	push	r28
      a6:	df 93       	push	r29
      a8:	cd b7       	in	r28, 0x3d	; 61
      aa:	de b7       	in	r29, 0x3e	; 62
      ac:	a4 97       	sbiw	r28, 0x24	; 36
      ae:	0f b6       	in	r0, 0x3f	; 63
      b0:	f8 94       	cli
      b2:	de bf       	out	0x3e, r29	; 62
      b4:	0f be       	out	0x3f, r0	; 63
      b6:	cd bf       	out	0x3d, r28	; 61
	uint8_t Start_Message[]="<<Welcome>>",STR[]="Default Temp=20",LV_Length1=0,LV_Length2=0,LV_Index_I;
      b8:	8c e0       	ldi	r24, 0x0C	; 12
      ba:	eb e8       	ldi	r30, 0x8B	; 139
      bc:	f0 e0       	ldi	r31, 0x00	; 0
      be:	de 01       	movw	r26, r28
      c0:	11 96       	adiw	r26, 0x01	; 1
      c2:	01 90       	ld	r0, Z+
      c4:	0d 92       	st	X+, r0
      c6:	8a 95       	dec	r24
      c8:	e1 f7       	brne	.-8      	; 0xc2 <Start+0x22>
      ca:	80 e1       	ldi	r24, 0x10	; 16
      cc:	e7 e9       	ldi	r30, 0x97	; 151
      ce:	f0 e0       	ldi	r31, 0x00	; 0
      d0:	de 01       	movw	r26, r28
      d2:	1d 96       	adiw	r26, 0x0d	; 13
      d4:	01 90       	ld	r0, Z+
      d6:	0d 92       	st	X+, r0
      d8:	8a 95       	dec	r24
      da:	e1 f7       	brne	.-8      	; 0xd4 <Start+0x34>
	
	uint8_t bell[8] = {0x04, 0x0E ,0x0E ,0x0E ,0x1f ,0x00 ,0x04 ,0x00};  //HEX Array for the Bell Shape//
      dc:	88 e0       	ldi	r24, 0x08	; 8
      de:	e1 e6       	ldi	r30, 0x61	; 97
      e0:	f0 e0       	ldi	r31, 0x00	; 0
      e2:	de 01       	movw	r26, r28
      e4:	5d 96       	adiw	r26, 0x1d	; 29
      e6:	01 90       	ld	r0, Z+
      e8:	0d 92       	st	X+, r0
      ea:	8a 95       	dec	r24
      ec:	e1 f7       	brne	.-8      	; 0xe6 <Start+0x46>
/**DESCRIPTION:-
   This Function displays The Welcome Message And it Stores The Bell Shape In th LCD 
   **/
void Start(void)
{
	uint8_t Start_Message[]="<<Welcome>>",STR[]="Default Temp=20",LV_Length1=0,LV_Length2=0,LV_Index_I;
      ee:	00 e0       	ldi	r16, 0x00	; 0
	
	uint8_t bell[8] = {0x04, 0x0E ,0x0E ,0x0E ,0x1f ,0x00 ,0x04 ,0x00};  //HEX Array for the Bell Shape//
		
	while(Start_Message[LV_Length1]) //this while loop is used to measure the length of the string //
      f0:	01 c0       	rjmp	.+2      	; 0xf4 <Start+0x54>
	{
		LV_Length1++;
      f2:	0f 5f       	subi	r16, 0xFF	; 255
{
	uint8_t Start_Message[]="<<Welcome>>",STR[]="Default Temp=20",LV_Length1=0,LV_Length2=0,LV_Index_I;
	
	uint8_t bell[8] = {0x04, 0x0E ,0x0E ,0x0E ,0x1f ,0x00 ,0x04 ,0x00};  //HEX Array for the Bell Shape//
		
	while(Start_Message[LV_Length1]) //this while loop is used to measure the length of the string //
      f4:	e1 e0       	ldi	r30, 0x01	; 1
      f6:	f0 e0       	ldi	r31, 0x00	; 0
      f8:	ec 0f       	add	r30, r28
      fa:	fd 1f       	adc	r31, r29
      fc:	e0 0f       	add	r30, r16
      fe:	f1 1d       	adc	r31, r1
     100:	80 81       	ld	r24, Z
     102:	81 11       	cpse	r24, r1
     104:	f6 cf       	rjmp	.-20     	; 0xf2 <Start+0x52>
     106:	10 e0       	ldi	r17, 0x00	; 0
     108:	01 c0       	rjmp	.+2      	; 0x10c <Start+0x6c>
	{
		LV_Length1++;
	}
	while(STR[LV_Length2])
	{
		LV_Length2++;
     10a:	1f 5f       	subi	r17, 0xFF	; 255
		
	while(Start_Message[LV_Length1]) //this while loop is used to measure the length of the string //
	{
		LV_Length1++;
	}
	while(STR[LV_Length2])
     10c:	ed e0       	ldi	r30, 0x0D	; 13
     10e:	f0 e0       	ldi	r31, 0x00	; 0
     110:	ec 0f       	add	r30, r28
     112:	fd 1f       	adc	r31, r29
     114:	e1 0f       	add	r30, r17
     116:	f1 1d       	adc	r31, r1
     118:	80 81       	ld	r24, Z
     11a:	81 11       	cpse	r24, r1
     11c:	f6 cf       	rjmp	.-20     	; 0x10a <Start+0x6a>
     11e:	14 c0       	rjmp	.+40     	; 0x148 <Start+0xa8>
		LV_Length2++;
	}
	
	for (LV_Index_I=LV_Length1;LV_Index_I>1;LV_Index_I--)  //this for loop is used to display the str from the last charecter to the first one//
	{
		LCD_Write_String(Start_Message+LV_Index_I-1);
     120:	80 2f       	mov	r24, r16
     122:	90 e0       	ldi	r25, 0x00	; 0
     124:	01 97       	sbiw	r24, 0x01	; 1
     126:	21 e0       	ldi	r18, 0x01	; 1
     128:	30 e0       	ldi	r19, 0x00	; 0
     12a:	2c 0f       	add	r18, r28
     12c:	3d 1f       	adc	r19, r29
     12e:	82 0f       	add	r24, r18
     130:	93 1f       	adc	r25, r19
     132:	0e 94 92 04 	call	0x924	; 0x924 <LCD_Write_String>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     136:	83 ed       	ldi	r24, 0xD3	; 211
     138:	90 e3       	ldi	r25, 0x30	; 48
     13a:	01 97       	sbiw	r24, 0x01	; 1
     13c:	f1 f7       	brne	.-4      	; 0x13a <Start+0x9a>
     13e:	00 c0       	rjmp	.+0      	; 0x140 <Start+0xa0>
     140:	00 00       	nop
		_delay_ms(50);
		LCD_Clear();
     142:	0e 94 f7 04 	call	0x9ee	; 0x9ee <LCD_Clear>
	while(STR[LV_Length2])
	{
		LV_Length2++;
	}
	
	for (LV_Index_I=LV_Length1;LV_Index_I>1;LV_Index_I--)  //this for loop is used to display the str from the last charecter to the first one//
     146:	01 50       	subi	r16, 0x01	; 1
     148:	02 30       	cpi	r16, 0x02	; 2
     14a:	50 f7       	brcc	.-44     	; 0x120 <Start+0x80>
     14c:	00 e0       	ldi	r16, 0x00	; 0
     14e:	11 c0       	rjmp	.+34     	; 0x172 <Start+0xd2>
		_delay_ms(50);
		LCD_Clear();
	}
	for (LV_Index_I=0;LV_Index_I<15;LV_Index_I++) //this for loop is used to display the whole string along the LCD Length//
	{
		LCD_GoTo(1,LV_Index_I);
     150:	60 2f       	mov	r22, r16
     152:	81 e0       	ldi	r24, 0x01	; 1
     154:	0e 94 fb 04 	call	0x9f6	; 0x9f6 <LCD_GoTo>
		LCD_Write_String(Start_Message);
     158:	ce 01       	movw	r24, r28
     15a:	01 96       	adiw	r24, 0x01	; 1
     15c:	0e 94 92 04 	call	0x924	; 0x924 <LCD_Write_String>
     160:	83 ed       	ldi	r24, 0xD3	; 211
     162:	90 e3       	ldi	r25, 0x30	; 48
     164:	01 97       	sbiw	r24, 0x01	; 1
     166:	f1 f7       	brne	.-4      	; 0x164 <Start+0xc4>
     168:	00 c0       	rjmp	.+0      	; 0x16a <Start+0xca>
     16a:	00 00       	nop
		_delay_ms(50);
		LCD_Clear();
     16c:	0e 94 f7 04 	call	0x9ee	; 0x9ee <LCD_Clear>
	{
		LCD_Write_String(Start_Message+LV_Index_I-1);
		_delay_ms(50);
		LCD_Clear();
	}
	for (LV_Index_I=0;LV_Index_I<15;LV_Index_I++) //this for loop is used to display the whole string along the LCD Length//
     170:	0f 5f       	subi	r16, 0xFF	; 255
     172:	0f 30       	cpi	r16, 0x0F	; 15
     174:	68 f3       	brcs	.-38     	; 0x150 <Start+0xb0>
     176:	18 c0       	rjmp	.+48     	; 0x1a8 <Start+0x108>
		_delay_ms(50);
		LCD_Clear();
	}
	for (LV_Index_I=LV_Length2;LV_Index_I>1;LV_Index_I--)
	{
		LCD_GoTo(2,0);
     178:	60 e0       	ldi	r22, 0x00	; 0
     17a:	82 e0       	ldi	r24, 0x02	; 2
     17c:	0e 94 fb 04 	call	0x9f6	; 0x9f6 <LCD_GoTo>
		LCD_Write_String(STR+LV_Index_I-1);
     180:	81 2f       	mov	r24, r17
     182:	90 e0       	ldi	r25, 0x00	; 0
     184:	01 97       	sbiw	r24, 0x01	; 1
     186:	2d e0       	ldi	r18, 0x0D	; 13
     188:	30 e0       	ldi	r19, 0x00	; 0
     18a:	2c 0f       	add	r18, r28
     18c:	3d 1f       	adc	r19, r29
     18e:	82 0f       	add	r24, r18
     190:	93 1f       	adc	r25, r19
     192:	0e 94 92 04 	call	0x924	; 0x924 <LCD_Write_String>
     196:	83 ed       	ldi	r24, 0xD3	; 211
     198:	90 e3       	ldi	r25, 0x30	; 48
     19a:	01 97       	sbiw	r24, 0x01	; 1
     19c:	f1 f7       	brne	.-4      	; 0x19a <Start+0xfa>
     19e:	00 c0       	rjmp	.+0      	; 0x1a0 <Start+0x100>
     1a0:	00 00       	nop
		_delay_ms(50);
		LCD_Clear();
     1a2:	0e 94 f7 04 	call	0x9ee	; 0x9ee <LCD_Clear>
		LCD_GoTo(1,LV_Index_I);
		LCD_Write_String(Start_Message);
		_delay_ms(50);
		LCD_Clear();
	}
	for (LV_Index_I=LV_Length2;LV_Index_I>1;LV_Index_I--)
     1a6:	11 50       	subi	r17, 0x01	; 1
     1a8:	12 30       	cpi	r17, 0x02	; 2
     1aa:	30 f7       	brcc	.-52     	; 0x178 <Start+0xd8>
     1ac:	83 ed       	ldi	r24, 0xD3	; 211
     1ae:	90 e3       	ldi	r25, 0x30	; 48
     1b0:	01 97       	sbiw	r24, 0x01	; 1
     1b2:	f1 f7       	brne	.-4      	; 0x1b0 <Start+0x110>
     1b4:	00 c0       	rjmp	.+0      	; 0x1b6 <Start+0x116>
     1b6:	00 00       	nop
		_delay_ms(50);
		LCD_Clear();
	}
	_delay_ms(50);
	
	for (LV_Index_I=0;LV_Index_I<15;LV_Index_I++)
     1b8:	10 e0       	ldi	r17, 0x00	; 0
     1ba:	11 c0       	rjmp	.+34     	; 0x1de <Start+0x13e>
	{
		LCD_GoTo(2,LV_Index_I);
     1bc:	61 2f       	mov	r22, r17
     1be:	82 e0       	ldi	r24, 0x02	; 2
     1c0:	0e 94 fb 04 	call	0x9f6	; 0x9f6 <LCD_GoTo>
		LCD_Write_String(STR);
     1c4:	ce 01       	movw	r24, r28
     1c6:	0d 96       	adiw	r24, 0x0d	; 13
     1c8:	0e 94 92 04 	call	0x924	; 0x924 <LCD_Write_String>
     1cc:	83 ed       	ldi	r24, 0xD3	; 211
     1ce:	90 e3       	ldi	r25, 0x30	; 48
     1d0:	01 97       	sbiw	r24, 0x01	; 1
     1d2:	f1 f7       	brne	.-4      	; 0x1d0 <Start+0x130>
     1d4:	00 c0       	rjmp	.+0      	; 0x1d6 <Start+0x136>
     1d6:	00 00       	nop
		_delay_ms(50);
		LCD_Clear();
     1d8:	0e 94 f7 04 	call	0x9ee	; 0x9ee <LCD_Clear>
		_delay_ms(50);
		LCD_Clear();
	}
	_delay_ms(50);
	
	for (LV_Index_I=0;LV_Index_I<15;LV_Index_I++)
     1dc:	1f 5f       	subi	r17, 0xFF	; 255
     1de:	1f 30       	cpi	r17, 0x0F	; 15
     1e0:	68 f3       	brcs	.-38     	; 0x1bc <Start+0x11c>
		LCD_GoTo(2,LV_Index_I);
		LCD_Write_String(STR);
		_delay_ms(50);
		LCD_Clear();
	}
	LCD_GoTo(1,0);
     1e2:	60 e0       	ldi	r22, 0x00	; 0
     1e4:	81 e0       	ldi	r24, 0x01	; 1
     1e6:	0e 94 fb 04 	call	0x9f6	; 0x9f6 <LCD_GoTo>
	LCD_Write_String("1:++	2:--  3:SET");
     1ea:	89 e6       	ldi	r24, 0x69	; 105
     1ec:	90 e0       	ldi	r25, 0x00	; 0
     1ee:	0e 94 92 04 	call	0x924	; 0x924 <LCD_Write_String>
	LCD_GoTo(2,0);
     1f2:	60 e0       	ldi	r22, 0x00	; 0
     1f4:	82 e0       	ldi	r24, 0x02	; 2
     1f6:	0e 94 fb 04 	call	0x9f6	; 0x9f6 <LCD_GoTo>
	LCD_Write_String("4:RESET	5:ADJUST");
     1fa:	8a e7       	ldi	r24, 0x7A	; 122
     1fc:	90 e0       	ldi	r25, 0x00	; 0
     1fe:	0e 94 92 04 	call	0x924	; 0x924 <LCD_Write_String>
     202:	9f e9       	ldi	r25, 0x9F	; 159
     204:	26 e8       	ldi	r18, 0x86	; 134
     206:	31 e0       	ldi	r19, 0x01	; 1
     208:	91 50       	subi	r25, 0x01	; 1
     20a:	20 40       	sbci	r18, 0x00	; 0
     20c:	30 40       	sbci	r19, 0x00	; 0
     20e:	e1 f7       	brne	.-8      	; 0x208 <Start+0x168>
     210:	00 c0       	rjmp	.+0      	; 0x212 <Start+0x172>
     212:	00 00       	nop
	_delay_ms(500);
	
	//storing the bell shape in the CGRAM//
	LCD_Create_Charecter(bell,2);
     214:	62 e0       	ldi	r22, 0x02	; 2
     216:	ce 01       	movw	r24, r28
     218:	4d 96       	adiw	r24, 0x1d	; 29
     21a:	0e 94 0c 05 	call	0xa18	; 0xa18 <LCD_Create_Charecter>
}
     21e:	a4 96       	adiw	r28, 0x24	; 36
     220:	0f b6       	in	r0, 0x3f	; 63
     222:	f8 94       	cli
     224:	de bf       	out	0x3e, r29	; 62
     226:	0f be       	out	0x3f, r0	; 63
     228:	cd bf       	out	0x3d, r28	; 61
     22a:	df 91       	pop	r29
     22c:	cf 91       	pop	r28
     22e:	1f 91       	pop	r17
     230:	0f 91       	pop	r16
     232:	08 95       	ret

00000234 <adjust_Welcome>:
/*********************************************************************************************************************************/


void adjust_Welcome(void){
	LCD_Clear();
     234:	0e 94 f7 04 	call	0x9ee	; 0x9ee <LCD_Clear>
	LCD_GoTo(1,0);
     238:	60 e0       	ldi	r22, 0x00	; 0
     23a:	81 e0       	ldi	r24, 0x01	; 1
     23c:	0e 94 fb 04 	call	0x9f6	; 0x9f6 <LCD_GoTo>
	LCD_Write_String("MAX TEMP IS 35");
     240:	87 ea       	ldi	r24, 0xA7	; 167
     242:	90 e0       	ldi	r25, 0x00	; 0
     244:	0e 94 92 04 	call	0x924	; 0x924 <LCD_Write_String>
	LCD_GoTo(2,0);
     248:	60 e0       	ldi	r22, 0x00	; 0
     24a:	82 e0       	ldi	r24, 0x02	; 2
     24c:	0e 94 fb 04 	call	0x9f6	; 0x9f6 <LCD_GoTo>
	LCD_Write_String("MIN TEMP IS 18");
     250:	86 eb       	ldi	r24, 0xB6	; 182
     252:	90 e0       	ldi	r25, 0x00	; 0
     254:	0e 94 92 04 	call	0x924	; 0x924 <LCD_Write_String>
	TIMER_0_DELAY_MS(500);
     258:	60 e0       	ldi	r22, 0x00	; 0
     25a:	70 e0       	ldi	r23, 0x00	; 0
     25c:	8a ef       	ldi	r24, 0xFA	; 250
     25e:	93 e4       	ldi	r25, 0x43	; 67
     260:	0e 94 50 08 	call	0x10a0	; 0x10a0 <TIMER_0_DELAY_MS>
	LCD_Clear();
     264:	0e 94 f7 04 	call	0x9ee	; 0x9ee <LCD_Clear>
	
	
	LCD_GoTo(1,0);
     268:	60 e0       	ldi	r22, 0x00	; 0
     26a:	81 e0       	ldi	r24, 0x01	; 1
     26c:	0e 94 fb 04 	call	0x9f6	; 0x9f6 <LCD_GoTo>
	LCD_Write_String("PLEASE CHOOSE ");
     270:	85 ec       	ldi	r24, 0xC5	; 197
     272:	90 e0       	ldi	r25, 0x00	; 0
     274:	0e 94 92 04 	call	0x924	; 0x924 <LCD_Write_String>
	LCD_GoTo(2,0);
     278:	60 e0       	ldi	r22, 0x00	; 0
     27a:	82 e0       	ldi	r24, 0x02	; 2
     27c:	0e 94 fb 04 	call	0x9f6	; 0x9f6 <LCD_GoTo>
	LCD_Write_String("REQUIRED TEMP ");
     280:	84 ed       	ldi	r24, 0xD4	; 212
     282:	90 e0       	ldi	r25, 0x00	; 0
     284:	0e 94 92 04 	call	0x924	; 0x924 <LCD_Write_String>
	TIMER_0_DELAY_MS(500);
     288:	60 e0       	ldi	r22, 0x00	; 0
     28a:	70 e0       	ldi	r23, 0x00	; 0
     28c:	8a ef       	ldi	r24, 0xFA	; 250
     28e:	93 e4       	ldi	r25, 0x43	; 67
     290:	0e 94 50 08 	call	0x10a0	; 0x10a0 <TIMER_0_DELAY_MS>
	LCD_Clear();
     294:	0e 94 f7 04 	call	0x9ee	; 0x9ee <LCD_Clear>
     298:	08 95       	ret

0000029a <adjust_stage>:
}


void adjust_stage(void){
     29a:	cf 93       	push	r28
     29c:	df 93       	push	r29
uint8_t key = 0;
     29e:	d0 e0       	ldi	r29, 0x00	; 0
	 while (key != SET && key != RESET  && g_flagStage != SETTED_STAGE)
     2a0:	54 c0       	rjmp	.+168    	; 0x34a <adjust_stage+0xb0>
	 {
		key = KEYPAD_getKey() ;
     2a2:	0e 94 b5 02 	call	0x56a	; 0x56a <KEYPAD_getKey>
     2a6:	d8 2f       	mov	r29, r24
		TIMER_0_DELAY_MS(50);
     2a8:	60 e0       	ldi	r22, 0x00	; 0
     2aa:	70 e0       	ldi	r23, 0x00	; 0
     2ac:	88 e4       	ldi	r24, 0x48	; 72
     2ae:	92 e4       	ldi	r25, 0x42	; 66
     2b0:	0e 94 50 08 	call	0x10a0	; 0x10a0 <TIMER_0_DELAY_MS>
		
			switch(key){
     2b4:	d1 33       	cpi	r29, 0x31	; 49
     2b6:	19 f0       	breq	.+6      	; 0x2be <adjust_stage+0x24>
     2b8:	d2 33       	cpi	r29, 0x32	; 50
     2ba:	59 f0       	breq	.+22     	; 0x2d2 <adjust_stage+0x38>
     2bc:	16 c0       	rjmp	.+44     	; 0x2ea <adjust_stage+0x50>
				case INCREMENT :
		
				if(g_tempValue <  35 ){
     2be:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
     2c2:	83 32       	cpi	r24, 0x23	; 35
     2c4:	18 f4       	brcc	.+6      	; 0x2cc <adjust_stage+0x32>
					g_tempValue++;
     2c6:	8f 5f       	subi	r24, 0xFF	; 255
     2c8:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
				}
				g_flagTimer = 0;
     2cc:	10 92 32 01 	sts	0x0132, r1	; 0x800132 <g_flagTimer>
				break;
     2d0:	0f c0       	rjmp	.+30     	; 0x2f0 <adjust_stage+0x56>
				
				case DECREMENT :
				
				if(g_tempValue >  18 ){
     2d2:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
     2d6:	83 31       	cpi	r24, 0x13	; 19
     2d8:	18 f0       	brcs	.+6      	; 0x2e0 <adjust_stage+0x46>
					g_tempValue--;
     2da:	81 50       	subi	r24, 0x01	; 1
     2dc:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
				}
				LCD_Clear();
     2e0:	0e 94 f7 04 	call	0x9ee	; 0x9ee <LCD_Clear>
				g_flagTimer = 0;
     2e4:	10 92 32 01 	sts	0x0132, r1	; 0x800132 <g_flagTimer>
				break;
     2e8:	03 c0       	rjmp	.+6      	; 0x2f0 <adjust_stage+0x56>
				
				
				default :
				g_flagTimer = 1;
     2ea:	81 e0       	ldi	r24, 0x01	; 1
     2ec:	80 93 32 01 	sts	0x0132, r24	; 0x800132 <g_flagTimer>
				break;
				
			
	
		}
			LCD_GoTo(1,0);
     2f0:	60 e0       	ldi	r22, 0x00	; 0
     2f2:	81 e0       	ldi	r24, 0x01	; 1
     2f4:	0e 94 fb 04 	call	0x9f6	; 0x9f6 <LCD_GoTo>
			LCD_Write_Number(MIN);
     2f8:	62 e1       	ldi	r22, 0x12	; 18
     2fa:	70 e0       	ldi	r23, 0x00	; 0
     2fc:	80 e0       	ldi	r24, 0x00	; 0
     2fe:	90 e0       	ldi	r25, 0x00	; 0
     300:	0e 94 a5 04 	call	0x94a	; 0x94a <LCD_Write_Number>
			LCD_GoTo(1,14);
     304:	6e e0       	ldi	r22, 0x0E	; 14
     306:	81 e0       	ldi	r24, 0x01	; 1
     308:	0e 94 fb 04 	call	0x9f6	; 0x9f6 <LCD_GoTo>
			LCD_Write_Number(MAX);
     30c:	63 e2       	ldi	r22, 0x23	; 35
     30e:	70 e0       	ldi	r23, 0x00	; 0
     310:	80 e0       	ldi	r24, 0x00	; 0
     312:	90 e0       	ldi	r25, 0x00	; 0
     314:	0e 94 a5 04 	call	0x94a	; 0x94a <LCD_Write_Number>
			LCD_GoTo(1,7);
     318:	67 e0       	ldi	r22, 0x07	; 7
     31a:	81 e0       	ldi	r24, 0x01	; 1
     31c:	0e 94 fb 04 	call	0x9f6	; 0x9f6 <LCD_GoTo>
			LCD_Write_Number(g_tempValue);
     320:	60 91 60 00 	lds	r22, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
     324:	70 e0       	ldi	r23, 0x00	; 0
     326:	80 e0       	ldi	r24, 0x00	; 0
     328:	90 e0       	ldi	r25, 0x00	; 0
     32a:	0e 94 a5 04 	call	0x94a	; 0x94a <LCD_Write_Number>
			LCD_GoTo(2,0);
     32e:	60 e0       	ldi	r22, 0x00	; 0
     330:	82 e0       	ldi	r24, 0x02	; 2
     332:	0e 94 fb 04 	call	0x9f6	; 0x9f6 <LCD_GoTo>
			for (uint8_t i= 18 ; i <= g_tempValue ; i++)
     336:	c2 e1       	ldi	r28, 0x12	; 18
     338:	04 c0       	rjmp	.+8      	; 0x342 <adjust_stage+0xa8>
			{
				LCD_Write_Charecter('|');
     33a:	8c e7       	ldi	r24, 0x7C	; 124
     33c:	0e 94 09 05 	call	0xa12	; 0xa12 <LCD_Write_Charecter>
			LCD_GoTo(1,14);
			LCD_Write_Number(MAX);
			LCD_GoTo(1,7);
			LCD_Write_Number(g_tempValue);
			LCD_GoTo(2,0);
			for (uint8_t i= 18 ; i <= g_tempValue ; i++)
     340:	cf 5f       	subi	r28, 0xFF	; 255
     342:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
     346:	8c 17       	cp	r24, r28
     348:	c0 f7       	brcc	.-16     	; 0x33a <adjust_stage+0xa0>
}


void adjust_stage(void){
uint8_t key = 0;
	 while (key != SET && key != RESET  && g_flagStage != SETTED_STAGE)
     34a:	d3 33       	cpi	r29, 0x33	; 51
     34c:	39 f0       	breq	.+14     	; 0x35c <adjust_stage+0xc2>
     34e:	d5 33       	cpi	r29, 0x35	; 53
     350:	29 f0       	breq	.+10     	; 0x35c <adjust_stage+0xc2>
     352:	80 91 33 01 	lds	r24, 0x0133	; 0x800133 <g_flagStage>
     356:	82 30       	cpi	r24, 0x02	; 2
     358:	09 f0       	breq	.+2      	; 0x35c <adjust_stage+0xc2>
     35a:	a3 cf       	rjmp	.-186    	; 0x2a2 <adjust_stage+0x8>
			
	
	}
	
	
		switch(key){
     35c:	d3 33       	cpi	r29, 0x33	; 51
     35e:	19 f0       	breq	.+6      	; 0x366 <adjust_stage+0xcc>
     360:	d5 33       	cpi	r29, 0x35	; 53
     362:	29 f0       	breq	.+10     	; 0x36e <adjust_stage+0xd4>
     364:	07 c0       	rjmp	.+14     	; 0x374 <adjust_stage+0xda>
				case SET :
				g_flagStage = SETTED_STAGE ;
     366:	82 e0       	ldi	r24, 0x02	; 2
     368:	80 93 33 01 	sts	0x0133, r24	; 0x800133 <g_flagStage>
				break;
     36c:	03 c0       	rjmp	.+6      	; 0x374 <adjust_stage+0xda>
				
				case RESET :
				g_flagStage = RESET_STAGE ;
     36e:	84 e0       	ldi	r24, 0x04	; 4
     370:	80 93 33 01 	sts	0x0133, r24	; 0x800133 <g_flagStage>
				default :
				
				break;
				
			}
}
     374:	df 91       	pop	r29
     376:	cf 91       	pop	r28
     378:	08 95       	ret

0000037a <LM35_read>:
/************************************************LM35_read************************************************************************************/
/* Description:
function used to start reading the LM35 temperature and display its value on the LCD
***********************************************************************************************************************************************/
uint16 LM35_read (void)
{
     37a:	cf 93       	push	r28
     37c:	df 93       	push	r29
	uint16 a_temp_celus;
	ADC_start_conversion (ADC_CH_6);
     37e:	86 e0       	ldi	r24, 0x06	; 6
     380:	0e 94 44 05 	call	0xa88	; 0xa88 <ADC_start_conversion>
	LCD_GoTo(1,2);
     384:	62 e0       	ldi	r22, 0x02	; 2
     386:	81 e0       	ldi	r24, 0x01	; 1
     388:	0e 94 fb 04 	call	0x9f6	; 0x9f6 <LCD_GoTo>
	LCD_Write_String("current temp =");
     38c:	83 ee       	ldi	r24, 0xE3	; 227
     38e:	90 e0       	ldi	r25, 0x00	; 0
     390:	0e 94 92 04 	call	0x924	; 0x924 <LCD_Write_String>
	LCD_GoTo(2,2);
     394:	62 e0       	ldi	r22, 0x02	; 2
     396:	82 e0       	ldi	r24, 0x02	; 2
     398:	0e 94 fb 04 	call	0x9f6	; 0x9f6 <LCD_GoTo>
	a_temp_celus = ADC_LM35_calibration();
     39c:	0e 94 53 05 	call	0xaa6	; 0xaa6 <ADC_LM35_calibration>
     3a0:	ec 01       	movw	r28, r24
	LCD_Write_Number(a_temp_celus);
     3a2:	bc 01       	movw	r22, r24
     3a4:	80 e0       	ldi	r24, 0x00	; 0
     3a6:	90 e0       	ldi	r25, 0x00	; 0
     3a8:	0e 94 a5 04 	call	0x94a	; 0x94a <LCD_Write_Number>
	return a_temp_celus;
}
     3ac:	ce 01       	movw	r24, r28
     3ae:	df 91       	pop	r29
     3b0:	cf 91       	pop	r28
     3b2:	08 95       	ret

000003b4 <set_stage>:
/************************************************set_stage************************************************************************************/
/* Description:
function used once Once button_3 is pressed the temperature is set and LCD display current temp
and display buzzer shape if temperature > set temperature & buzzer ON
***********************************************************************************************************************************************/
void set_stage(void){
     3b4:	cf 93       	push	r28
LCD_Clear();
     3b6:	0e 94 f7 04 	call	0x9ee	; 0x9ee <LCD_Clear>
uint8_t a_key = 0;
     3ba:	c0 e0       	ldi	r28, 0x00	; 0
while (a_key != ADJUST && a_key != RESET)
     3bc:	3f c0       	rjmp	.+126    	; 0x43c <__EEPROM_REGION_LENGTH__+0x3c>
{
	a_key = KEYPAD_getKey() ;
     3be:	0e 94 b5 02 	call	0x56a	; 0x56a <KEYPAD_getKey>
     3c2:	c8 2f       	mov	r28, r24
	TIMER_0_DELAY_MS(50);
     3c4:	60 e0       	ldi	r22, 0x00	; 0
     3c6:	70 e0       	ldi	r23, 0x00	; 0
     3c8:	88 e4       	ldi	r24, 0x48	; 72
     3ca:	92 e4       	ldi	r25, 0x42	; 66
     3cc:	0e 94 50 08 	call	0x10a0	; 0x10a0 <TIMER_0_DELAY_MS>
	unsigned short int curreunt_temp = LM35_read();
     3d0:	0e 94 bd 01 	call	0x37a	; 0x37a <LM35_read>
	if (curreunt_temp > g_tempValue) 
     3d4:	20 91 60 00 	lds	r18, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
     3d8:	30 e0       	ldi	r19, 0x00	; 0
     3da:	28 17       	cp	r18, r24
     3dc:	39 07       	cpc	r19, r25
     3de:	50 f4       	brcc	.+20     	; 0x3f4 <set_stage+0x40>
	{
		buzzer_On();
     3e0:	0e 94 92 02 	call	0x524	; 0x524 <buzzer_On>
		LCD_GoTo(2,8);
     3e4:	68 e0       	ldi	r22, 0x08	; 8
     3e6:	82 e0       	ldi	r24, 0x02	; 2
     3e8:	0e 94 fb 04 	call	0x9f6	; 0x9f6 <LCD_GoTo>
		LCD_Write_Charecter(2);
     3ec:	82 e0       	ldi	r24, 0x02	; 2
     3ee:	0e 94 09 05 	call	0xa12	; 0xa12 <LCD_Write_Charecter>
     3f2:	0a c0       	rjmp	.+20     	; 0x408 <__EEPROM_REGION_LENGTH__+0x8>
	}
	else 
	{
		buzzer_Off();
     3f4:	0e 94 97 02 	call	0x52e	; 0x52e <buzzer_Off>
		LCD_GoTo(2,8);
     3f8:	68 e0       	ldi	r22, 0x08	; 8
     3fa:	82 e0       	ldi	r24, 0x02	; 2
     3fc:	0e 94 fb 04 	call	0x9f6	; 0x9f6 <LCD_GoTo>
		LCD_Write_String(" ");
     400:	82 ed       	ldi	r24, 0xD2	; 210
     402:	90 e0       	ldi	r25, 0x00	; 0
     404:	0e 94 92 04 	call	0x924	; 0x924 <LCD_Write_String>
	}
	if (a_key== INCREMENT || a_key== DECREMENT) //after set mode all buttons are not allowed except button_4 and button_5
     408:	8f ec       	ldi	r24, 0xCF	; 207
     40a:	8c 0f       	add	r24, r28
     40c:	82 30       	cpi	r24, 0x02	; 2
     40e:	b0 f4       	brcc	.+44     	; 0x43c <__EEPROM_REGION_LENGTH__+0x3c>
	{
		LCD_Clear();
     410:	0e 94 f7 04 	call	0x9ee	; 0x9ee <LCD_Clear>
		LCD_Write_String("the operation is");
     414:	82 ef       	ldi	r24, 0xF2	; 242
     416:	90 e0       	ldi	r25, 0x00	; 0
     418:	0e 94 92 04 	call	0x924	; 0x924 <LCD_Write_String>
		LCD_GoTo(2,1);
     41c:	61 e0       	ldi	r22, 0x01	; 1
     41e:	82 e0       	ldi	r24, 0x02	; 2
     420:	0e 94 fb 04 	call	0x9f6	; 0x9f6 <LCD_GoTo>
		LCD_Write_String("not allowed");
     424:	83 e0       	ldi	r24, 0x03	; 3
     426:	91 e0       	ldi	r25, 0x01	; 1
     428:	0e 94 92 04 	call	0x924	; 0x924 <LCD_Write_String>
		TIMER_0_DELAY_MS(500);
     42c:	60 e0       	ldi	r22, 0x00	; 0
     42e:	70 e0       	ldi	r23, 0x00	; 0
     430:	8a ef       	ldi	r24, 0xFA	; 250
     432:	93 e4       	ldi	r25, 0x43	; 67
     434:	0e 94 50 08 	call	0x10a0	; 0x10a0 <TIMER_0_DELAY_MS>
		LCD_Clear();
     438:	0e 94 f7 04 	call	0x9ee	; 0x9ee <LCD_Clear>
and display buzzer shape if temperature > set temperature & buzzer ON
***********************************************************************************************************************************************/
void set_stage(void){
LCD_Clear();
uint8_t a_key = 0;
while (a_key != ADJUST && a_key != RESET)
     43c:	8c ec       	ldi	r24, 0xCC	; 204
     43e:	8c 0f       	add	r24, r28
     440:	82 30       	cpi	r24, 0x02	; 2
     442:	08 f0       	brcs	.+2      	; 0x446 <__EEPROM_REGION_LENGTH__+0x46>
     444:	bc cf       	rjmp	.-136    	; 0x3be <set_stage+0xa>
		LCD_Write_String("not allowed");
		TIMER_0_DELAY_MS(500);
		LCD_Clear();
	}
}
LCD_Clear();
     446:	0e 94 f7 04 	call	0x9ee	; 0x9ee <LCD_Clear>
if (a_key == ADJUST) g_flagStage = READJUST_STAGE;
     44a:	c4 33       	cpi	r28, 0x34	; 52
     44c:	21 f4       	brne	.+8      	; 0x456 <__EEPROM_REGION_LENGTH__+0x56>
     44e:	83 e0       	ldi	r24, 0x03	; 3
     450:	80 93 33 01 	sts	0x0133, r24	; 0x800133 <g_flagStage>
     454:	05 c0       	rjmp	.+10     	; 0x460 <__EEPROM_REGION_LENGTH__+0x60>
else if (a_key == RESET) g_flagStage = RESET_STAGE;
     456:	c5 33       	cpi	r28, 0x35	; 53
     458:	19 f4       	brne	.+6      	; 0x460 <__EEPROM_REGION_LENGTH__+0x60>
     45a:	84 e0       	ldi	r24, 0x04	; 4
     45c:	80 93 33 01 	sts	0x0133, r24	; 0x800133 <g_flagStage>
}
     460:	cf 91       	pop	r28
     462:	08 95       	ret

00000464 <readjust_stage>:
/* Description:
function used once button_4 is press to go back to adjust mode and stop buzzer if it was working
***********************************************************************************************************************************************/
void readjust_stage (void)
{
	LCD_Clear();
     464:	0e 94 f7 04 	call	0x9ee	; 0x9ee <LCD_Clear>
	buzzer_Off();
     468:	0e 94 97 02 	call	0x52e	; 0x52e <buzzer_Off>
	g_flagStage = ADJUST_STAGE;
     46c:	81 e0       	ldi	r24, 0x01	; 1
     46e:	80 93 33 01 	sts	0x0133, r24	; 0x800133 <g_flagStage>
	TIMER_0_DELAY_MS(500);// timeout
     472:	60 e0       	ldi	r22, 0x00	; 0
     474:	70 e0       	ldi	r23, 0x00	; 0
     476:	8a ef       	ldi	r24, 0xFA	; 250
     478:	93 e4       	ldi	r25, 0x43	; 67
     47a:	0e 94 50 08 	call	0x10a0	; 0x10a0 <TIMER_0_DELAY_MS>
     47e:	08 95       	ret

00000480 <reset_stage>:
/* Description:
function used once button_5 is press to  reset temperature to its default
*********************************************************************************************************************************************/
void reset_stage (void)
{
	LCD_Clear();
     480:	0e 94 f7 04 	call	0x9ee	; 0x9ee <LCD_Clear>
	g_tempValue = 20;
     484:	84 e1       	ldi	r24, 0x14	; 20
     486:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
	LCD_Write_String("Temp value is");
     48a:	8f e0       	ldi	r24, 0x0F	; 15
     48c:	91 e0       	ldi	r25, 0x01	; 1
     48e:	0e 94 92 04 	call	0x924	; 0x924 <LCD_Write_String>
	LCD_GoTo(2,1);
     492:	61 e0       	ldi	r22, 0x01	; 1
     494:	82 e0       	ldi	r24, 0x02	; 2
     496:	0e 94 fb 04 	call	0x9f6	; 0x9f6 <LCD_GoTo>
	LCD_Write_String("reset to 20");
     49a:	8d e1       	ldi	r24, 0x1D	; 29
     49c:	91 e0       	ldi	r25, 0x01	; 1
     49e:	0e 94 92 04 	call	0x924	; 0x924 <LCD_Write_String>
	TIMER_0_DELAY_MS(2000);
     4a2:	60 e0       	ldi	r22, 0x00	; 0
     4a4:	70 e0       	ldi	r23, 0x00	; 0
     4a6:	8a ef       	ldi	r24, 0xFA	; 250
     4a8:	94 e4       	ldi	r25, 0x44	; 68
     4aa:	0e 94 50 08 	call	0x10a0	; 0x10a0 <TIMER_0_DELAY_MS>
	g_flagStage = SETTED_STAGE ;
     4ae:	82 e0       	ldi	r24, 0x02	; 2
     4b0:	80 93 33 01 	sts	0x0133, r24	; 0x800133 <g_flagStage>
     4b4:	08 95       	ret

000004b6 <app_Init>:
}

void app_Init(void){
	
	KEYPAD_init();
     4b6:	0e 94 9c 02 	call	0x538	; 0x538 <KEYPAD_init>
	TIMER_2_INT();
     4ba:	0e 94 02 09 	call	0x1204	; 0x1204 <TIMER_2_INT>
	LCD_INIT();
     4be:	0e 94 42 04 	call	0x884	; 0x884 <LCD_INIT>
	ADC_init();
     4c2:	0e 94 2c 05 	call	0xa58	; 0xa58 <ADC_init>
	ADC_start_conversion (ADC_CH_6);
     4c6:	86 e0       	ldi	r24, 0x06	; 6
     4c8:	0e 94 44 05 	call	0xa88	; 0xa88 <ADC_start_conversion>
	buzzer_init();
     4cc:	0e 94 8d 02 	call	0x51a	; 0x51a <buzzer_init>
     4d0:	08 95       	ret

000004d2 <app_Start>:
}

void app_Start(void){
		
	if (g_flagStage == STARTING ){
     4d2:	80 91 33 01 	lds	r24, 0x0133	; 0x800133 <g_flagStage>
     4d6:	81 11       	cpse	r24, r1
     4d8:	05 c0       	rjmp	.+10     	; 0x4e4 <app_Start+0x12>
	   Start();	
     4da:	0e 94 50 00 	call	0xa0	; 0xa0 <Start>
	   g_flagStage = ADJUST_STAGE ;
     4de:	81 e0       	ldi	r24, 0x01	; 1
     4e0:	80 93 33 01 	sts	0x0133, r24	; 0x800133 <g_flagStage>
	}	
	
	if (g_flagStage == ADJUST_STAGE )
     4e4:	80 91 33 01 	lds	r24, 0x0133	; 0x800133 <g_flagStage>
     4e8:	81 30       	cpi	r24, 0x01	; 1
     4ea:	21 f4       	brne	.+8      	; 0x4f4 <app_Start+0x22>
	{
	  adjust_Welcome();
     4ec:	0e 94 1a 01 	call	0x234	; 0x234 <adjust_Welcome>
	  adjust_stage();
     4f0:	0e 94 4d 01 	call	0x29a	; 0x29a <adjust_stage>
	}		
	if (g_flagStage == SETTED_STAGE )
     4f4:	80 91 33 01 	lds	r24, 0x0133	; 0x800133 <g_flagStage>
     4f8:	82 30       	cpi	r24, 0x02	; 2
     4fa:	11 f4       	brne	.+4      	; 0x500 <app_Start+0x2e>
	{			
	   set_stage();
     4fc:	0e 94 da 01 	call	0x3b4	; 0x3b4 <set_stage>
	}

	if (g_flagStage == READJUST_STAGE )
     500:	80 91 33 01 	lds	r24, 0x0133	; 0x800133 <g_flagStage>
     504:	83 30       	cpi	r24, 0x03	; 3
     506:	11 f4       	brne	.+4      	; 0x50c <app_Start+0x3a>
	{
	  readjust_stage();
     508:	0e 94 32 02 	call	0x464	; 0x464 <readjust_stage>
	}
	if (g_flagStage == RESET_STAGE) 
     50c:	80 91 33 01 	lds	r24, 0x0133	; 0x800133 <g_flagStage>
     510:	84 30       	cpi	r24, 0x04	; 4
     512:	11 f4       	brne	.+4      	; 0x518 <app_Start+0x46>
	{
		reset_stage();
     514:	0e 94 40 02 	call	0x480	; 0x480 <reset_stage>
     518:	08 95       	ret

0000051a <buzzer_init>:
     51a:	60 e0       	ldi	r22, 0x00	; 0
     51c:	8b e0       	ldi	r24, 0x0B	; 11
     51e:	0e 94 6a 05 	call	0xad4	; 0xad4 <DIO_INITPIN>
     522:	08 95       	ret

00000524 <buzzer_On>:
     524:	61 e0       	ldi	r22, 0x01	; 1
     526:	8b e0       	ldi	r24, 0x0B	; 11
     528:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <DIO_WRITEPIN>
     52c:	08 95       	ret

0000052e <buzzer_Off>:
     52e:	60 e0       	ldi	r22, 0x00	; 0
     530:	8b e0       	ldi	r24, 0x0B	; 11
     532:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <DIO_WRITEPIN>
     536:	08 95       	ret

00000538 <KEYPAD_init>:
     538:	cf 93       	push	r28
     53a:	c0 e0       	ldi	r28, 0x00	; 0
     53c:	09 c0       	rjmp	.+18     	; 0x550 <KEYPAD_init+0x18>
     53e:	60 e0       	ldi	r22, 0x00	; 0
     540:	8c 2f       	mov	r24, r28
     542:	0e 94 6a 05 	call	0xad4	; 0xad4 <DIO_INITPIN>
     546:	61 e0       	ldi	r22, 0x01	; 1
     548:	8c 2f       	mov	r24, r28
     54a:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <DIO_WRITEPIN>
     54e:	cf 5f       	subi	r28, 0xFF	; 255
     550:	c3 30       	cpi	r28, 0x03	; 3
     552:	a8 f3       	brcs	.-22     	; 0x53e <KEYPAD_init+0x6>
     554:	c3 e0       	ldi	r28, 0x03	; 3
     556:	05 c0       	rjmp	.+10     	; 0x562 <KEYPAD_init+0x2a>
     558:	62 e0       	ldi	r22, 0x02	; 2
     55a:	8c 2f       	mov	r24, r28
     55c:	0e 94 6a 05 	call	0xad4	; 0xad4 <DIO_INITPIN>
     560:	cf 5f       	subi	r28, 0xFF	; 255
     562:	c6 30       	cpi	r28, 0x06	; 6
     564:	c8 f3       	brcs	.-14     	; 0x558 <KEYPAD_init+0x20>
     566:	cf 91       	pop	r28
     568:	08 95       	ret

0000056a <KEYPAD_getKey>:
     56a:	ff 92       	push	r15
     56c:	0f 93       	push	r16
     56e:	1f 93       	push	r17
     570:	cf 93       	push	r28
     572:	df 93       	push	r29
     574:	1f 92       	push	r1
     576:	cd b7       	in	r28, 0x3d	; 61
     578:	de b7       	in	r29, 0x3e	; 62
     57a:	81 e0       	ldi	r24, 0x01	; 1
     57c:	89 83       	std	Y+1, r24	; 0x01
     57e:	00 e0       	ldi	r16, 0x00	; 0
     580:	ae c0       	rjmp	.+348    	; 0x6de <KEYPAD_getKey+0x174>
     582:	60 e0       	ldi	r22, 0x00	; 0
     584:	80 2f       	mov	r24, r16
     586:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <DIO_WRITEPIN>
     58a:	87 e8       	ldi	r24, 0x87	; 135
     58c:	93 e1       	ldi	r25, 0x13	; 19
     58e:	01 97       	sbiw	r24, 0x01	; 1
     590:	f1 f7       	brne	.-4      	; 0x58e <KEYPAD_getKey+0x24>
     592:	00 c0       	rjmp	.+0      	; 0x594 <KEYPAD_getKey+0x2a>
     594:	00 00       	nop
     596:	13 e0       	ldi	r17, 0x03	; 3
     598:	9a c0       	rjmp	.+308    	; 0x6ce <KEYPAD_getKey+0x164>
     59a:	be 01       	movw	r22, r28
     59c:	6f 5f       	subi	r22, 0xFF	; 255
     59e:	7f 4f       	sbci	r23, 0xFF	; 255
     5a0:	81 2f       	mov	r24, r17
     5a2:	0e 94 09 07 	call	0xe12	; 0xe12 <DIO_READPIN>
     5a6:	8e c0       	rjmp	.+284    	; 0x6c4 <KEYPAD_getKey+0x15a>
     5a8:	be 01       	movw	r22, r28
     5aa:	6f 5f       	subi	r22, 0xFF	; 255
     5ac:	7f 4f       	sbci	r23, 0xFF	; 255
     5ae:	81 2f       	mov	r24, r17
     5b0:	0e 94 09 07 	call	0xe12	; 0xe12 <DIO_READPIN>
     5b4:	01 30       	cpi	r16, 0x01	; 1
     5b6:	11 f1       	breq	.+68     	; 0x5fc <KEYPAD_getKey+0x92>
     5b8:	30 f0       	brcs	.+12     	; 0x5c6 <KEYPAD_getKey+0x5c>
     5ba:	02 30       	cpi	r16, 0x02	; 2
     5bc:	d1 f1       	breq	.+116    	; 0x632 <KEYPAD_getKey+0xc8>
     5be:	03 30       	cpi	r16, 0x03	; 3
     5c0:	09 f4       	brne	.+2      	; 0x5c4 <KEYPAD_getKey+0x5a>
     5c2:	51 c0       	rjmp	.+162    	; 0x666 <KEYPAD_getKey+0xfc>
     5c4:	6a c0       	rjmp	.+212    	; 0x69a <KEYPAD_getKey+0x130>
     5c6:	14 30       	cpi	r17, 0x04	; 4
     5c8:	51 f0       	breq	.+20     	; 0x5de <KEYPAD_getKey+0x74>
     5ca:	20 f4       	brcc	.+8      	; 0x5d4 <KEYPAD_getKey+0x6a>
     5cc:	13 30       	cpi	r17, 0x03	; 3
     5ce:	09 f4       	brne	.+2      	; 0x5d2 <KEYPAD_getKey+0x68>
     5d0:	66 c0       	rjmp	.+204    	; 0x69e <KEYPAD_getKey+0x134>
     5d2:	78 c0       	rjmp	.+240    	; 0x6c4 <KEYPAD_getKey+0x15a>
     5d4:	15 30       	cpi	r17, 0x05	; 5
     5d6:	41 f0       	breq	.+16     	; 0x5e8 <KEYPAD_getKey+0x7e>
     5d8:	16 30       	cpi	r17, 0x06	; 6
     5da:	59 f0       	breq	.+22     	; 0x5f2 <KEYPAD_getKey+0x88>
     5dc:	73 c0       	rjmp	.+230    	; 0x6c4 <KEYPAD_getKey+0x15a>
     5de:	0f 2e       	mov	r0, r31
     5e0:	f8 e3       	ldi	r31, 0x38	; 56
     5e2:	ff 2e       	mov	r15, r31
     5e4:	f0 2d       	mov	r31, r0
     5e6:	6e c0       	rjmp	.+220    	; 0x6c4 <KEYPAD_getKey+0x15a>
     5e8:	0f 2e       	mov	r0, r31
     5ea:	f9 e3       	ldi	r31, 0x39	; 57
     5ec:	ff 2e       	mov	r15, r31
     5ee:	f0 2d       	mov	r31, r0
     5f0:	69 c0       	rjmp	.+210    	; 0x6c4 <KEYPAD_getKey+0x15a>
     5f2:	0f 2e       	mov	r0, r31
     5f4:	ff e2       	ldi	r31, 0x2F	; 47
     5f6:	ff 2e       	mov	r15, r31
     5f8:	f0 2d       	mov	r31, r0
     5fa:	64 c0       	rjmp	.+200    	; 0x6c4 <KEYPAD_getKey+0x15a>
     5fc:	14 30       	cpi	r17, 0x04	; 4
     5fe:	51 f0       	breq	.+20     	; 0x614 <KEYPAD_getKey+0xaa>
     600:	20 f4       	brcc	.+8      	; 0x60a <KEYPAD_getKey+0xa0>
     602:	13 30       	cpi	r17, 0x03	; 3
     604:	09 f4       	brne	.+2      	; 0x608 <KEYPAD_getKey+0x9e>
     606:	50 c0       	rjmp	.+160    	; 0x6a8 <KEYPAD_getKey+0x13e>
     608:	5d c0       	rjmp	.+186    	; 0x6c4 <KEYPAD_getKey+0x15a>
     60a:	15 30       	cpi	r17, 0x05	; 5
     60c:	41 f0       	breq	.+16     	; 0x61e <KEYPAD_getKey+0xb4>
     60e:	16 30       	cpi	r17, 0x06	; 6
     610:	59 f0       	breq	.+22     	; 0x628 <KEYPAD_getKey+0xbe>
     612:	58 c0       	rjmp	.+176    	; 0x6c4 <KEYPAD_getKey+0x15a>
     614:	0f 2e       	mov	r0, r31
     616:	f5 e3       	ldi	r31, 0x35	; 53
     618:	ff 2e       	mov	r15, r31
     61a:	f0 2d       	mov	r31, r0
     61c:	53 c0       	rjmp	.+166    	; 0x6c4 <KEYPAD_getKey+0x15a>
     61e:	0f 2e       	mov	r0, r31
     620:	f6 e3       	ldi	r31, 0x36	; 54
     622:	ff 2e       	mov	r15, r31
     624:	f0 2d       	mov	r31, r0
     626:	4e c0       	rjmp	.+156    	; 0x6c4 <KEYPAD_getKey+0x15a>
     628:	0f 2e       	mov	r0, r31
     62a:	fa e2       	ldi	r31, 0x2A	; 42
     62c:	ff 2e       	mov	r15, r31
     62e:	f0 2d       	mov	r31, r0
     630:	49 c0       	rjmp	.+146    	; 0x6c4 <KEYPAD_getKey+0x15a>
     632:	14 30       	cpi	r17, 0x04	; 4
     634:	49 f0       	breq	.+18     	; 0x648 <KEYPAD_getKey+0xde>
     636:	18 f4       	brcc	.+6      	; 0x63e <KEYPAD_getKey+0xd4>
     638:	13 30       	cpi	r17, 0x03	; 3
     63a:	d9 f1       	breq	.+118    	; 0x6b2 <KEYPAD_getKey+0x148>
     63c:	43 c0       	rjmp	.+134    	; 0x6c4 <KEYPAD_getKey+0x15a>
     63e:	15 30       	cpi	r17, 0x05	; 5
     640:	41 f0       	breq	.+16     	; 0x652 <KEYPAD_getKey+0xe8>
     642:	16 30       	cpi	r17, 0x06	; 6
     644:	59 f0       	breq	.+22     	; 0x65c <KEYPAD_getKey+0xf2>
     646:	3e c0       	rjmp	.+124    	; 0x6c4 <KEYPAD_getKey+0x15a>
     648:	0f 2e       	mov	r0, r31
     64a:	f2 e3       	ldi	r31, 0x32	; 50
     64c:	ff 2e       	mov	r15, r31
     64e:	f0 2d       	mov	r31, r0
     650:	39 c0       	rjmp	.+114    	; 0x6c4 <KEYPAD_getKey+0x15a>
     652:	0f 2e       	mov	r0, r31
     654:	f3 e3       	ldi	r31, 0x33	; 51
     656:	ff 2e       	mov	r15, r31
     658:	f0 2d       	mov	r31, r0
     65a:	34 c0       	rjmp	.+104    	; 0x6c4 <KEYPAD_getKey+0x15a>
     65c:	0f 2e       	mov	r0, r31
     65e:	fd e2       	ldi	r31, 0x2D	; 45
     660:	ff 2e       	mov	r15, r31
     662:	f0 2d       	mov	r31, r0
     664:	2f c0       	rjmp	.+94     	; 0x6c4 <KEYPAD_getKey+0x15a>
     666:	14 30       	cpi	r17, 0x04	; 4
     668:	49 f0       	breq	.+18     	; 0x67c <KEYPAD_getKey+0x112>
     66a:	18 f4       	brcc	.+6      	; 0x672 <KEYPAD_getKey+0x108>
     66c:	13 30       	cpi	r17, 0x03	; 3
     66e:	31 f1       	breq	.+76     	; 0x6bc <KEYPAD_getKey+0x152>
     670:	29 c0       	rjmp	.+82     	; 0x6c4 <KEYPAD_getKey+0x15a>
     672:	15 30       	cpi	r17, 0x05	; 5
     674:	41 f0       	breq	.+16     	; 0x686 <KEYPAD_getKey+0x11c>
     676:	16 30       	cpi	r17, 0x06	; 6
     678:	59 f0       	breq	.+22     	; 0x690 <KEYPAD_getKey+0x126>
     67a:	24 c0       	rjmp	.+72     	; 0x6c4 <KEYPAD_getKey+0x15a>
     67c:	0f 2e       	mov	r0, r31
     67e:	f0 e3       	ldi	r31, 0x30	; 48
     680:	ff 2e       	mov	r15, r31
     682:	f0 2d       	mov	r31, r0
     684:	1f c0       	rjmp	.+62     	; 0x6c4 <KEYPAD_getKey+0x15a>
     686:	0f 2e       	mov	r0, r31
     688:	fd e3       	ldi	r31, 0x3D	; 61
     68a:	ff 2e       	mov	r15, r31
     68c:	f0 2d       	mov	r31, r0
     68e:	1a c0       	rjmp	.+52     	; 0x6c4 <KEYPAD_getKey+0x15a>
     690:	0f 2e       	mov	r0, r31
     692:	fb e2       	ldi	r31, 0x2B	; 43
     694:	ff 2e       	mov	r15, r31
     696:	f0 2d       	mov	r31, r0
     698:	15 c0       	rjmp	.+42     	; 0x6c4 <KEYPAD_getKey+0x15a>
     69a:	f1 2c       	mov	r15, r1
     69c:	13 c0       	rjmp	.+38     	; 0x6c4 <KEYPAD_getKey+0x15a>
     69e:	0f 2e       	mov	r0, r31
     6a0:	f7 e3       	ldi	r31, 0x37	; 55
     6a2:	ff 2e       	mov	r15, r31
     6a4:	f0 2d       	mov	r31, r0
     6a6:	0e c0       	rjmp	.+28     	; 0x6c4 <KEYPAD_getKey+0x15a>
     6a8:	0f 2e       	mov	r0, r31
     6aa:	f4 e3       	ldi	r31, 0x34	; 52
     6ac:	ff 2e       	mov	r15, r31
     6ae:	f0 2d       	mov	r31, r0
     6b0:	09 c0       	rjmp	.+18     	; 0x6c4 <KEYPAD_getKey+0x15a>
     6b2:	0f 2e       	mov	r0, r31
     6b4:	f1 e3       	ldi	r31, 0x31	; 49
     6b6:	ff 2e       	mov	r15, r31
     6b8:	f0 2d       	mov	r31, r0
     6ba:	04 c0       	rjmp	.+8      	; 0x6c4 <KEYPAD_getKey+0x15a>
     6bc:	0f 2e       	mov	r0, r31
     6be:	f1 e4       	ldi	r31, 0x41	; 65
     6c0:	ff 2e       	mov	r15, r31
     6c2:	f0 2d       	mov	r31, r0
     6c4:	89 81       	ldd	r24, Y+1	; 0x01
     6c6:	88 23       	and	r24, r24
     6c8:	09 f4       	brne	.+2      	; 0x6cc <KEYPAD_getKey+0x162>
     6ca:	6e cf       	rjmp	.-292    	; 0x5a8 <KEYPAD_getKey+0x3e>
     6cc:	1f 5f       	subi	r17, 0xFF	; 255
     6ce:	16 30       	cpi	r17, 0x06	; 6
     6d0:	08 f4       	brcc	.+2      	; 0x6d4 <KEYPAD_getKey+0x16a>
     6d2:	63 cf       	rjmp	.-314    	; 0x59a <KEYPAD_getKey+0x30>
     6d4:	61 e0       	ldi	r22, 0x01	; 1
     6d6:	80 2f       	mov	r24, r16
     6d8:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <DIO_WRITEPIN>
     6dc:	0f 5f       	subi	r16, 0xFF	; 255
     6de:	03 30       	cpi	r16, 0x03	; 3
     6e0:	08 f4       	brcc	.+2      	; 0x6e4 <KEYPAD_getKey+0x17a>
     6e2:	4f cf       	rjmp	.-354    	; 0x582 <KEYPAD_getKey+0x18>
     6e4:	8f 2d       	mov	r24, r15
     6e6:	0f 90       	pop	r0
     6e8:	df 91       	pop	r29
     6ea:	cf 91       	pop	r28
     6ec:	1f 91       	pop	r17
     6ee:	0f 91       	pop	r16
     6f0:	ff 90       	pop	r15
     6f2:	08 95       	ret

000006f4 <LCD_WRITE_COMMAND>:
     6f4:	cf 93       	push	r28
     6f6:	c8 2f       	mov	r28, r24
     6f8:	60 e0       	ldi	r22, 0x00	; 0
     6fa:	88 e1       	ldi	r24, 0x18	; 24
     6fc:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <DIO_WRITEPIN>
     700:	60 e0       	ldi	r22, 0x00	; 0
     702:	89 e1       	ldi	r24, 0x19	; 25
     704:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <DIO_WRITEPIN>
     708:	c4 fb       	bst	r28, 4
     70a:	66 27       	eor	r22, r22
     70c:	60 f9       	bld	r22, 0
     70e:	80 e1       	ldi	r24, 0x10	; 16
     710:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <DIO_WRITEPIN>
     714:	c5 fb       	bst	r28, 5
     716:	66 27       	eor	r22, r22
     718:	60 f9       	bld	r22, 0
     71a:	81 e1       	ldi	r24, 0x11	; 17
     71c:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <DIO_WRITEPIN>
     720:	c6 fb       	bst	r28, 6
     722:	66 27       	eor	r22, r22
     724:	60 f9       	bld	r22, 0
     726:	82 e1       	ldi	r24, 0x12	; 18
     728:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <DIO_WRITEPIN>
     72c:	6c 2f       	mov	r22, r28
     72e:	66 1f       	adc	r22, r22
     730:	66 27       	eor	r22, r22
     732:	66 1f       	adc	r22, r22
     734:	83 e1       	ldi	r24, 0x13	; 19
     736:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <DIO_WRITEPIN>
     73a:	61 e0       	ldi	r22, 0x01	; 1
     73c:	8a e1       	ldi	r24, 0x1A	; 26
     73e:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <DIO_WRITEPIN>
     742:	89 ef       	ldi	r24, 0xF9	; 249
     744:	90 e0       	ldi	r25, 0x00	; 0
     746:	01 97       	sbiw	r24, 0x01	; 1
     748:	f1 f7       	brne	.-4      	; 0x746 <LCD_WRITE_COMMAND+0x52>
     74a:	00 c0       	rjmp	.+0      	; 0x74c <LCD_WRITE_COMMAND+0x58>
     74c:	00 00       	nop
     74e:	60 e0       	ldi	r22, 0x00	; 0
     750:	8a e1       	ldi	r24, 0x1A	; 26
     752:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <DIO_WRITEPIN>
     756:	89 ef       	ldi	r24, 0xF9	; 249
     758:	90 e0       	ldi	r25, 0x00	; 0
     75a:	01 97       	sbiw	r24, 0x01	; 1
     75c:	f1 f7       	brne	.-4      	; 0x75a <LCD_WRITE_COMMAND+0x66>
     75e:	00 c0       	rjmp	.+0      	; 0x760 <LCD_WRITE_COMMAND+0x6c>
     760:	00 00       	nop
     762:	6c 2f       	mov	r22, r28
     764:	61 70       	andi	r22, 0x01	; 1
     766:	80 e1       	ldi	r24, 0x10	; 16
     768:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <DIO_WRITEPIN>
     76c:	c1 fb       	bst	r28, 1
     76e:	66 27       	eor	r22, r22
     770:	60 f9       	bld	r22, 0
     772:	81 e1       	ldi	r24, 0x11	; 17
     774:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <DIO_WRITEPIN>
     778:	c2 fb       	bst	r28, 2
     77a:	66 27       	eor	r22, r22
     77c:	60 f9       	bld	r22, 0
     77e:	82 e1       	ldi	r24, 0x12	; 18
     780:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <DIO_WRITEPIN>
     784:	c3 fb       	bst	r28, 3
     786:	66 27       	eor	r22, r22
     788:	60 f9       	bld	r22, 0
     78a:	83 e1       	ldi	r24, 0x13	; 19
     78c:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <DIO_WRITEPIN>
     790:	61 e0       	ldi	r22, 0x01	; 1
     792:	8a e1       	ldi	r24, 0x1A	; 26
     794:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <DIO_WRITEPIN>
     798:	89 ef       	ldi	r24, 0xF9	; 249
     79a:	90 e0       	ldi	r25, 0x00	; 0
     79c:	01 97       	sbiw	r24, 0x01	; 1
     79e:	f1 f7       	brne	.-4      	; 0x79c <LCD_WRITE_COMMAND+0xa8>
     7a0:	00 c0       	rjmp	.+0      	; 0x7a2 <LCD_WRITE_COMMAND+0xae>
     7a2:	00 00       	nop
     7a4:	60 e0       	ldi	r22, 0x00	; 0
     7a6:	8a e1       	ldi	r24, 0x1A	; 26
     7a8:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <DIO_WRITEPIN>
     7ac:	89 ef       	ldi	r24, 0xF9	; 249
     7ae:	90 e0       	ldi	r25, 0x00	; 0
     7b0:	01 97       	sbiw	r24, 0x01	; 1
     7b2:	f1 f7       	brne	.-4      	; 0x7b0 <LCD_WRITE_COMMAND+0xbc>
     7b4:	00 c0       	rjmp	.+0      	; 0x7b6 <LCD_WRITE_COMMAND+0xc2>
     7b6:	00 00       	nop
     7b8:	cf 91       	pop	r28
     7ba:	08 95       	ret

000007bc <LCD_WRITE_DATA>:
     7bc:	cf 93       	push	r28
     7be:	c8 2f       	mov	r28, r24
     7c0:	61 e0       	ldi	r22, 0x01	; 1
     7c2:	88 e1       	ldi	r24, 0x18	; 24
     7c4:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <DIO_WRITEPIN>
     7c8:	60 e0       	ldi	r22, 0x00	; 0
     7ca:	89 e1       	ldi	r24, 0x19	; 25
     7cc:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <DIO_WRITEPIN>
     7d0:	c4 fb       	bst	r28, 4
     7d2:	66 27       	eor	r22, r22
     7d4:	60 f9       	bld	r22, 0
     7d6:	80 e1       	ldi	r24, 0x10	; 16
     7d8:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <DIO_WRITEPIN>
     7dc:	c5 fb       	bst	r28, 5
     7de:	66 27       	eor	r22, r22
     7e0:	60 f9       	bld	r22, 0
     7e2:	81 e1       	ldi	r24, 0x11	; 17
     7e4:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <DIO_WRITEPIN>
     7e8:	c6 fb       	bst	r28, 6
     7ea:	66 27       	eor	r22, r22
     7ec:	60 f9       	bld	r22, 0
     7ee:	82 e1       	ldi	r24, 0x12	; 18
     7f0:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <DIO_WRITEPIN>
     7f4:	6c 2f       	mov	r22, r28
     7f6:	66 1f       	adc	r22, r22
     7f8:	66 27       	eor	r22, r22
     7fa:	66 1f       	adc	r22, r22
     7fc:	83 e1       	ldi	r24, 0x13	; 19
     7fe:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <DIO_WRITEPIN>
     802:	61 e0       	ldi	r22, 0x01	; 1
     804:	8a e1       	ldi	r24, 0x1A	; 26
     806:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <DIO_WRITEPIN>
     80a:	89 ef       	ldi	r24, 0xF9	; 249
     80c:	90 e0       	ldi	r25, 0x00	; 0
     80e:	01 97       	sbiw	r24, 0x01	; 1
     810:	f1 f7       	brne	.-4      	; 0x80e <__DATA_REGION_LENGTH__+0xe>
     812:	00 c0       	rjmp	.+0      	; 0x814 <__DATA_REGION_LENGTH__+0x14>
     814:	00 00       	nop
     816:	60 e0       	ldi	r22, 0x00	; 0
     818:	8a e1       	ldi	r24, 0x1A	; 26
     81a:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <DIO_WRITEPIN>
     81e:	89 ef       	ldi	r24, 0xF9	; 249
     820:	90 e0       	ldi	r25, 0x00	; 0
     822:	01 97       	sbiw	r24, 0x01	; 1
     824:	f1 f7       	brne	.-4      	; 0x822 <__DATA_REGION_LENGTH__+0x22>
     826:	00 c0       	rjmp	.+0      	; 0x828 <__DATA_REGION_LENGTH__+0x28>
     828:	00 00       	nop
     82a:	6c 2f       	mov	r22, r28
     82c:	61 70       	andi	r22, 0x01	; 1
     82e:	80 e1       	ldi	r24, 0x10	; 16
     830:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <DIO_WRITEPIN>
     834:	c1 fb       	bst	r28, 1
     836:	66 27       	eor	r22, r22
     838:	60 f9       	bld	r22, 0
     83a:	81 e1       	ldi	r24, 0x11	; 17
     83c:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <DIO_WRITEPIN>
     840:	c2 fb       	bst	r28, 2
     842:	66 27       	eor	r22, r22
     844:	60 f9       	bld	r22, 0
     846:	82 e1       	ldi	r24, 0x12	; 18
     848:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <DIO_WRITEPIN>
     84c:	c3 fb       	bst	r28, 3
     84e:	66 27       	eor	r22, r22
     850:	60 f9       	bld	r22, 0
     852:	83 e1       	ldi	r24, 0x13	; 19
     854:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <DIO_WRITEPIN>
     858:	61 e0       	ldi	r22, 0x01	; 1
     85a:	8a e1       	ldi	r24, 0x1A	; 26
     85c:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <DIO_WRITEPIN>
     860:	89 ef       	ldi	r24, 0xF9	; 249
     862:	90 e0       	ldi	r25, 0x00	; 0
     864:	01 97       	sbiw	r24, 0x01	; 1
     866:	f1 f7       	brne	.-4      	; 0x864 <__stack+0x5>
     868:	00 c0       	rjmp	.+0      	; 0x86a <__stack+0xb>
     86a:	00 00       	nop
     86c:	60 e0       	ldi	r22, 0x00	; 0
     86e:	8a e1       	ldi	r24, 0x1A	; 26
     870:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <DIO_WRITEPIN>
     874:	89 ef       	ldi	r24, 0xF9	; 249
     876:	90 e0       	ldi	r25, 0x00	; 0
     878:	01 97       	sbiw	r24, 0x01	; 1
     87a:	f1 f7       	brne	.-4      	; 0x878 <__stack+0x19>
     87c:	00 c0       	rjmp	.+0      	; 0x87e <__stack+0x1f>
     87e:	00 00       	nop
     880:	cf 91       	pop	r28
     882:	08 95       	ret

00000884 <LCD_INIT>:
     884:	60 e0       	ldi	r22, 0x00	; 0
     886:	88 e1       	ldi	r24, 0x18	; 24
     888:	0e 94 6a 05 	call	0xad4	; 0xad4 <DIO_INITPIN>
     88c:	60 e0       	ldi	r22, 0x00	; 0
     88e:	89 e1       	ldi	r24, 0x19	; 25
     890:	0e 94 6a 05 	call	0xad4	; 0xad4 <DIO_INITPIN>
     894:	60 e0       	ldi	r22, 0x00	; 0
     896:	8a e1       	ldi	r24, 0x1A	; 26
     898:	0e 94 6a 05 	call	0xad4	; 0xad4 <DIO_INITPIN>
     89c:	60 e0       	ldi	r22, 0x00	; 0
     89e:	80 e1       	ldi	r24, 0x10	; 16
     8a0:	0e 94 6a 05 	call	0xad4	; 0xad4 <DIO_INITPIN>
     8a4:	60 e0       	ldi	r22, 0x00	; 0
     8a6:	81 e1       	ldi	r24, 0x11	; 17
     8a8:	0e 94 6a 05 	call	0xad4	; 0xad4 <DIO_INITPIN>
     8ac:	60 e0       	ldi	r22, 0x00	; 0
     8ae:	82 e1       	ldi	r24, 0x12	; 18
     8b0:	0e 94 6a 05 	call	0xad4	; 0xad4 <DIO_INITPIN>
     8b4:	60 e0       	ldi	r22, 0x00	; 0
     8b6:	83 e1       	ldi	r24, 0x13	; 19
     8b8:	0e 94 6a 05 	call	0xad4	; 0xad4 <DIO_INITPIN>
     8bc:	83 ed       	ldi	r24, 0xD3	; 211
     8be:	90 e3       	ldi	r25, 0x30	; 48
     8c0:	01 97       	sbiw	r24, 0x01	; 1
     8c2:	f1 f7       	brne	.-4      	; 0x8c0 <LCD_INIT+0x3c>
     8c4:	00 c0       	rjmp	.+0      	; 0x8c6 <LCD_INIT+0x42>
     8c6:	00 00       	nop
     8c8:	82 e0       	ldi	r24, 0x02	; 2
     8ca:	0e 94 7a 03 	call	0x6f4	; 0x6f4 <LCD_WRITE_COMMAND>
     8ce:	89 ef       	ldi	r24, 0xF9	; 249
     8d0:	90 e0       	ldi	r25, 0x00	; 0
     8d2:	01 97       	sbiw	r24, 0x01	; 1
     8d4:	f1 f7       	brne	.-4      	; 0x8d2 <LCD_INIT+0x4e>
     8d6:	00 c0       	rjmp	.+0      	; 0x8d8 <LCD_INIT+0x54>
     8d8:	00 00       	nop
     8da:	88 e2       	ldi	r24, 0x28	; 40
     8dc:	0e 94 7a 03 	call	0x6f4	; 0x6f4 <LCD_WRITE_COMMAND>
     8e0:	89 ef       	ldi	r24, 0xF9	; 249
     8e2:	90 e0       	ldi	r25, 0x00	; 0
     8e4:	01 97       	sbiw	r24, 0x01	; 1
     8e6:	f1 f7       	brne	.-4      	; 0x8e4 <LCD_INIT+0x60>
     8e8:	00 c0       	rjmp	.+0      	; 0x8ea <LCD_INIT+0x66>
     8ea:	00 00       	nop
     8ec:	8c e0       	ldi	r24, 0x0C	; 12
     8ee:	0e 94 7a 03 	call	0x6f4	; 0x6f4 <LCD_WRITE_COMMAND>
     8f2:	89 ef       	ldi	r24, 0xF9	; 249
     8f4:	90 e0       	ldi	r25, 0x00	; 0
     8f6:	01 97       	sbiw	r24, 0x01	; 1
     8f8:	f1 f7       	brne	.-4      	; 0x8f6 <LCD_INIT+0x72>
     8fa:	00 c0       	rjmp	.+0      	; 0x8fc <LCD_INIT+0x78>
     8fc:	00 00       	nop
     8fe:	81 e0       	ldi	r24, 0x01	; 1
     900:	0e 94 7a 03 	call	0x6f4	; 0x6f4 <LCD_WRITE_COMMAND>
     904:	83 ef       	ldi	r24, 0xF3	; 243
     906:	91 e0       	ldi	r25, 0x01	; 1
     908:	01 97       	sbiw	r24, 0x01	; 1
     90a:	f1 f7       	brne	.-4      	; 0x908 <LCD_INIT+0x84>
     90c:	00 c0       	rjmp	.+0      	; 0x90e <LCD_INIT+0x8a>
     90e:	00 00       	nop
     910:	86 e0       	ldi	r24, 0x06	; 6
     912:	0e 94 7a 03 	call	0x6f4	; 0x6f4 <LCD_WRITE_COMMAND>
     916:	89 ef       	ldi	r24, 0xF9	; 249
     918:	90 e0       	ldi	r25, 0x00	; 0
     91a:	01 97       	sbiw	r24, 0x01	; 1
     91c:	f1 f7       	brne	.-4      	; 0x91a <LCD_INIT+0x96>
     91e:	00 c0       	rjmp	.+0      	; 0x920 <LCD_INIT+0x9c>
     920:	00 00       	nop
     922:	08 95       	ret

00000924 <LCD_Write_String>:
     924:	0f 93       	push	r16
     926:	1f 93       	push	r17
     928:	cf 93       	push	r28
     92a:	8c 01       	movw	r16, r24
     92c:	c0 e0       	ldi	r28, 0x00	; 0
     92e:	03 c0       	rjmp	.+6      	; 0x936 <LCD_Write_String+0x12>
     930:	0e 94 de 03 	call	0x7bc	; 0x7bc <LCD_WRITE_DATA>
     934:	cf 5f       	subi	r28, 0xFF	; 255
     936:	f8 01       	movw	r30, r16
     938:	ec 0f       	add	r30, r28
     93a:	f1 1d       	adc	r31, r1
     93c:	80 81       	ld	r24, Z
     93e:	81 11       	cpse	r24, r1
     940:	f7 cf       	rjmp	.-18     	; 0x930 <LCD_Write_String+0xc>
     942:	cf 91       	pop	r28
     944:	1f 91       	pop	r17
     946:	0f 91       	pop	r16
     948:	08 95       	ret

0000094a <LCD_Write_Number>:
     94a:	cf 92       	push	r12
     94c:	df 92       	push	r13
     94e:	ef 92       	push	r14
     950:	ff 92       	push	r15
     952:	1f 93       	push	r17
     954:	cf 93       	push	r28
     956:	df 93       	push	r29
     958:	cd b7       	in	r28, 0x3d	; 61
     95a:	de b7       	in	r29, 0x3e	; 62
     95c:	60 97       	sbiw	r28, 0x10	; 16
     95e:	0f b6       	in	r0, 0x3f	; 63
     960:	f8 94       	cli
     962:	de bf       	out	0x3e, r29	; 62
     964:	0f be       	out	0x3f, r0	; 63
     966:	cd bf       	out	0x3d, r28	; 61
     968:	6b 01       	movw	r12, r22
     96a:	7c 01       	movw	r14, r24
     96c:	67 2b       	or	r22, r23
     96e:	68 2b       	or	r22, r24
     970:	69 2b       	or	r22, r25
     972:	19 f4       	brne	.+6      	; 0x97a <LCD_Write_Number+0x30>
     974:	80 e3       	ldi	r24, 0x30	; 48
     976:	0e 94 de 03 	call	0x7bc	; 0x7bc <LCD_WRITE_DATA>
     97a:	10 e0       	ldi	r17, 0x00	; 0
     97c:	15 c0       	rjmp	.+42     	; 0x9a8 <LCD_Write_Number+0x5e>
     97e:	c7 01       	movw	r24, r14
     980:	b6 01       	movw	r22, r12
     982:	2a e0       	ldi	r18, 0x0A	; 10
     984:	30 e0       	ldi	r19, 0x00	; 0
     986:	40 e0       	ldi	r20, 0x00	; 0
     988:	50 e0       	ldi	r21, 0x00	; 0
     98a:	0e 94 ee 0b 	call	0x17dc	; 0x17dc <__udivmodsi4>
     98e:	e1 e0       	ldi	r30, 0x01	; 1
     990:	f0 e0       	ldi	r31, 0x00	; 0
     992:	ec 0f       	add	r30, r28
     994:	fd 1f       	adc	r31, r29
     996:	e1 0f       	add	r30, r17
     998:	f1 1d       	adc	r31, r1
     99a:	60 5d       	subi	r22, 0xD0	; 208
     99c:	60 83       	st	Z, r22
     99e:	1f 5f       	subi	r17, 0xFF	; 255
     9a0:	c2 2e       	mov	r12, r18
     9a2:	d3 2e       	mov	r13, r19
     9a4:	e4 2e       	mov	r14, r20
     9a6:	f5 2e       	mov	r15, r21
     9a8:	c1 14       	cp	r12, r1
     9aa:	d1 04       	cpc	r13, r1
     9ac:	e1 04       	cpc	r14, r1
     9ae:	f1 04       	cpc	r15, r1
     9b0:	31 f7       	brne	.-52     	; 0x97e <LCD_Write_Number+0x34>
     9b2:	0d c0       	rjmp	.+26     	; 0x9ce <LCD_Write_Number+0x84>
     9b4:	e1 2f       	mov	r30, r17
     9b6:	f0 e0       	ldi	r31, 0x00	; 0
     9b8:	31 97       	sbiw	r30, 0x01	; 1
     9ba:	81 e0       	ldi	r24, 0x01	; 1
     9bc:	90 e0       	ldi	r25, 0x00	; 0
     9be:	8c 0f       	add	r24, r28
     9c0:	9d 1f       	adc	r25, r29
     9c2:	e8 0f       	add	r30, r24
     9c4:	f9 1f       	adc	r31, r25
     9c6:	80 81       	ld	r24, Z
     9c8:	0e 94 de 03 	call	0x7bc	; 0x7bc <LCD_WRITE_DATA>
     9cc:	11 50       	subi	r17, 0x01	; 1
     9ce:	11 11       	cpse	r17, r1
     9d0:	f1 cf       	rjmp	.-30     	; 0x9b4 <LCD_Write_Number+0x6a>
     9d2:	60 96       	adiw	r28, 0x10	; 16
     9d4:	0f b6       	in	r0, 0x3f	; 63
     9d6:	f8 94       	cli
     9d8:	de bf       	out	0x3e, r29	; 62
     9da:	0f be       	out	0x3f, r0	; 63
     9dc:	cd bf       	out	0x3d, r28	; 61
     9de:	df 91       	pop	r29
     9e0:	cf 91       	pop	r28
     9e2:	1f 91       	pop	r17
     9e4:	ff 90       	pop	r15
     9e6:	ef 90       	pop	r14
     9e8:	df 90       	pop	r13
     9ea:	cf 90       	pop	r12
     9ec:	08 95       	ret

000009ee <LCD_Clear>:
     9ee:	81 e0       	ldi	r24, 0x01	; 1
     9f0:	0e 94 7a 03 	call	0x6f4	; 0x6f4 <LCD_WRITE_COMMAND>
     9f4:	08 95       	ret

000009f6 <LCD_GoTo>:
     9f6:	81 30       	cpi	r24, 0x01	; 1
     9f8:	29 f4       	brne	.+10     	; 0xa04 <LCD_GoTo+0xe>
     9fa:	80 e8       	ldi	r24, 0x80	; 128
     9fc:	86 0f       	add	r24, r22
     9fe:	0e 94 7a 03 	call	0x6f4	; 0x6f4 <LCD_WRITE_COMMAND>
     a02:	08 95       	ret
     a04:	82 30       	cpi	r24, 0x02	; 2
     a06:	21 f4       	brne	.+8      	; 0xa10 <LCD_GoTo+0x1a>
     a08:	80 ec       	ldi	r24, 0xC0	; 192
     a0a:	86 0f       	add	r24, r22
     a0c:	0e 94 7a 03 	call	0x6f4	; 0x6f4 <LCD_WRITE_COMMAND>
     a10:	08 95       	ret

00000a12 <LCD_Write_Charecter>:
     a12:	0e 94 de 03 	call	0x7bc	; 0x7bc <LCD_WRITE_DATA>
     a16:	08 95       	ret

00000a18 <LCD_Create_Charecter>:
     a18:	0f 93       	push	r16
     a1a:	1f 93       	push	r17
     a1c:	cf 93       	push	r28
     a1e:	8c 01       	movw	r16, r24
     a20:	86 2f       	mov	r24, r22
     a22:	90 e0       	ldi	r25, 0x00	; 0
     a24:	08 96       	adiw	r24, 0x08	; 8
     a26:	88 0f       	add	r24, r24
     a28:	88 0f       	add	r24, r24
     a2a:	88 0f       	add	r24, r24
     a2c:	0e 94 7a 03 	call	0x6f4	; 0x6f4 <LCD_WRITE_COMMAND>
     a30:	c0 e0       	ldi	r28, 0x00	; 0
     a32:	07 c0       	rjmp	.+14     	; 0xa42 <LCD_Create_Charecter+0x2a>
     a34:	f8 01       	movw	r30, r16
     a36:	ec 0f       	add	r30, r28
     a38:	f1 1d       	adc	r31, r1
     a3a:	80 81       	ld	r24, Z
     a3c:	0e 94 de 03 	call	0x7bc	; 0x7bc <LCD_WRITE_DATA>
     a40:	cf 5f       	subi	r28, 0xFF	; 255
     a42:	c8 30       	cpi	r28, 0x08	; 8
     a44:	b8 f3       	brcs	.-18     	; 0xa34 <LCD_Create_Charecter+0x1c>
     a46:	cf 91       	pop	r28
     a48:	1f 91       	pop	r17
     a4a:	0f 91       	pop	r16
     a4c:	08 95       	ret

00000a4e <main>:

#include "APP/APP.h"

int main(void)
{
 app_Init();
     a4e:	0e 94 5b 02 	call	0x4b6	; 0x4b6 <app_Init>
   while (1)
    {
	
		
	app_Start();
     a52:	0e 94 69 02 	call	0x4d2	; 0x4d2 <app_Start>
     a56:	fd cf       	rjmp	.-6      	; 0xa52 <main+0x4>

00000a58 <ADC_init>:
     a58:	87 b1       	in	r24, 0x07	; 7
     a5a:	8f 73       	andi	r24, 0x3F	; 63
     a5c:	87 b9       	out	0x07, r24	; 7
     a5e:	87 b1       	in	r24, 0x07	; 7
     a60:	80 6c       	ori	r24, 0xC0	; 192
     a62:	87 b9       	out	0x07, r24	; 7
     a64:	86 b1       	in	r24, 0x06	; 6
     a66:	80 62       	ori	r24, 0x20	; 32
     a68:	86 b9       	out	0x06, r24	; 6
     a6a:	80 b7       	in	r24, 0x30	; 48
     a6c:	8f 71       	andi	r24, 0x1F	; 31
     a6e:	80 bf       	out	0x30, r24	; 48
     a70:	80 b7       	in	r24, 0x30	; 48
     a72:	80 bf       	out	0x30, r24	; 48
     a74:	87 b1       	in	r24, 0x07	; 7
     a76:	8f 7d       	andi	r24, 0xDF	; 223
     a78:	87 b9       	out	0x07, r24	; 7
     a7a:	86 b1       	in	r24, 0x06	; 6
     a7c:	80 61       	ori	r24, 0x10	; 16
     a7e:	86 b9       	out	0x06, r24	; 6
     a80:	86 b1       	in	r24, 0x06	; 6
     a82:	80 68       	ori	r24, 0x80	; 128
     a84:	86 b9       	out	0x06, r24	; 6
     a86:	08 95       	ret

00000a88 <ADC_start_conversion>:
     a88:	97 b1       	in	r25, 0x07	; 7
     a8a:	90 7e       	andi	r25, 0xE0	; 224
     a8c:	97 b9       	out	0x07, r25	; 7
     a8e:	97 b1       	in	r25, 0x07	; 7
     a90:	89 2b       	or	r24, r25
     a92:	87 b9       	out	0x07, r24	; 7
     a94:	86 b1       	in	r24, 0x06	; 6
     a96:	80 64       	ori	r24, 0x40	; 64
     a98:	86 b9       	out	0x06, r24	; 6
     a9a:	36 9b       	sbis	0x06, 6	; 6
     a9c:	fe cf       	rjmp	.-4      	; 0xa9a <ADC_start_conversion+0x12>
     a9e:	08 95       	ret

00000aa0 <ADC_Read>:
     aa0:	84 b1       	in	r24, 0x04	; 4
     aa2:	95 b1       	in	r25, 0x05	; 5
     aa4:	08 95       	ret

00000aa6 <ADC_LM35_calibration>:
     aa6:	0e 94 50 05 	call	0xaa0	; 0xaa0 <ADC_Read>
     aaa:	bc 01       	movw	r22, r24
     aac:	80 e0       	ldi	r24, 0x00	; 0
     aae:	90 e0       	ldi	r25, 0x00	; 0
     ab0:	0e 94 89 0a 	call	0x1512	; 0x1512 <__floatunsisf>
     ab4:	20 e0       	ldi	r18, 0x00	; 0
     ab6:	30 e0       	ldi	r19, 0x00	; 0
     ab8:	40 e2       	ldi	r20, 0x20	; 32
     aba:	50 e4       	ldi	r21, 0x40	; 64
     abc:	0e 94 81 0b 	call	0x1702	; 0x1702 <__mulsf3>
     ac0:	20 e0       	ldi	r18, 0x00	; 0
     ac2:	30 e0       	ldi	r19, 0x00	; 0
     ac4:	40 e2       	ldi	r20, 0x20	; 32
     ac6:	51 e4       	ldi	r21, 0x41	; 65
     ac8:	0e 94 e8 09 	call	0x13d0	; 0x13d0 <__divsf3>
     acc:	0e 94 5a 0a 	call	0x14b4	; 0x14b4 <__fixunssfsi>
     ad0:	cb 01       	movw	r24, r22
     ad2:	08 95       	ret

00000ad4 <DIO_INITPIN>:
     ad4:	98 2f       	mov	r25, r24
     ad6:	96 95       	lsr	r25
     ad8:	96 95       	lsr	r25
     ada:	96 95       	lsr	r25
     adc:	87 70       	andi	r24, 0x07	; 7
     ade:	95 30       	cpi	r25, 0x05	; 5
     ae0:	08 f0       	brcs	.+2      	; 0xae4 <DIO_INITPIN+0x10>
     ae2:	f8 c0       	rjmp	.+496    	; 0xcd4 <DIO_INITPIN+0x200>
     ae4:	61 30       	cpi	r22, 0x01	; 1
     ae6:	31 f0       	breq	.+12     	; 0xaf4 <DIO_INITPIN+0x20>
     ae8:	08 f4       	brcc	.+2      	; 0xaec <DIO_INITPIN+0x18>
     aea:	a4 c0       	rjmp	.+328    	; 0xc34 <DIO_INITPIN+0x160>
     aec:	62 30       	cpi	r22, 0x02	; 2
     aee:	09 f4       	brne	.+2      	; 0xaf2 <DIO_INITPIN+0x1e>
     af0:	51 c0       	rjmp	.+162    	; 0xb94 <DIO_INITPIN+0xc0>
     af2:	ef c0       	rjmp	.+478    	; 0xcd2 <DIO_INITPIN+0x1fe>
     af4:	91 30       	cpi	r25, 0x01	; 1
     af6:	c1 f0       	breq	.+48     	; 0xb28 <DIO_INITPIN+0x54>
     af8:	28 f0       	brcs	.+10     	; 0xb04 <DIO_INITPIN+0x30>
     afa:	92 30       	cpi	r25, 0x02	; 2
     afc:	39 f1       	breq	.+78     	; 0xb4c <DIO_INITPIN+0x78>
     afe:	93 30       	cpi	r25, 0x03	; 3
     b00:	b9 f1       	breq	.+110    	; 0xb70 <DIO_INITPIN+0x9c>
     b02:	e7 c0       	rjmp	.+462    	; 0xcd2 <DIO_INITPIN+0x1fe>
     b04:	4a b3       	in	r20, 0x1a	; 26
     b06:	21 e0       	ldi	r18, 0x01	; 1
     b08:	30 e0       	ldi	r19, 0x00	; 0
     b0a:	b9 01       	movw	r22, r18
     b0c:	02 c0       	rjmp	.+4      	; 0xb12 <DIO_INITPIN+0x3e>
     b0e:	66 0f       	add	r22, r22
     b10:	77 1f       	adc	r23, r23
     b12:	8a 95       	dec	r24
     b14:	e2 f7       	brpl	.-8      	; 0xb0e <DIO_INITPIN+0x3a>
     b16:	cb 01       	movw	r24, r22
     b18:	80 95       	com	r24
     b1a:	94 2f       	mov	r25, r20
     b1c:	98 23       	and	r25, r24
     b1e:	9a bb       	out	0x1a, r25	; 26
     b20:	9b b3       	in	r25, 0x1b	; 27
     b22:	89 23       	and	r24, r25
     b24:	8b bb       	out	0x1b, r24	; 27
     b26:	d5 c0       	rjmp	.+426    	; 0xcd2 <DIO_INITPIN+0x1fe>
     b28:	47 b3       	in	r20, 0x17	; 23
     b2a:	21 e0       	ldi	r18, 0x01	; 1
     b2c:	30 e0       	ldi	r19, 0x00	; 0
     b2e:	b9 01       	movw	r22, r18
     b30:	02 c0       	rjmp	.+4      	; 0xb36 <DIO_INITPIN+0x62>
     b32:	66 0f       	add	r22, r22
     b34:	77 1f       	adc	r23, r23
     b36:	8a 95       	dec	r24
     b38:	e2 f7       	brpl	.-8      	; 0xb32 <DIO_INITPIN+0x5e>
     b3a:	cb 01       	movw	r24, r22
     b3c:	80 95       	com	r24
     b3e:	94 2f       	mov	r25, r20
     b40:	98 23       	and	r25, r24
     b42:	97 bb       	out	0x17, r25	; 23
     b44:	98 b3       	in	r25, 0x18	; 24
     b46:	89 23       	and	r24, r25
     b48:	88 bb       	out	0x18, r24	; 24
     b4a:	c3 c0       	rjmp	.+390    	; 0xcd2 <DIO_INITPIN+0x1fe>
     b4c:	44 b3       	in	r20, 0x14	; 20
     b4e:	21 e0       	ldi	r18, 0x01	; 1
     b50:	30 e0       	ldi	r19, 0x00	; 0
     b52:	b9 01       	movw	r22, r18
     b54:	02 c0       	rjmp	.+4      	; 0xb5a <DIO_INITPIN+0x86>
     b56:	66 0f       	add	r22, r22
     b58:	77 1f       	adc	r23, r23
     b5a:	8a 95       	dec	r24
     b5c:	e2 f7       	brpl	.-8      	; 0xb56 <DIO_INITPIN+0x82>
     b5e:	cb 01       	movw	r24, r22
     b60:	80 95       	com	r24
     b62:	94 2f       	mov	r25, r20
     b64:	98 23       	and	r25, r24
     b66:	94 bb       	out	0x14, r25	; 20
     b68:	95 b3       	in	r25, 0x15	; 21
     b6a:	89 23       	and	r24, r25
     b6c:	85 bb       	out	0x15, r24	; 21
     b6e:	b1 c0       	rjmp	.+354    	; 0xcd2 <DIO_INITPIN+0x1fe>
     b70:	41 b3       	in	r20, 0x11	; 17
     b72:	21 e0       	ldi	r18, 0x01	; 1
     b74:	30 e0       	ldi	r19, 0x00	; 0
     b76:	b9 01       	movw	r22, r18
     b78:	02 c0       	rjmp	.+4      	; 0xb7e <DIO_INITPIN+0xaa>
     b7a:	66 0f       	add	r22, r22
     b7c:	77 1f       	adc	r23, r23
     b7e:	8a 95       	dec	r24
     b80:	e2 f7       	brpl	.-8      	; 0xb7a <DIO_INITPIN+0xa6>
     b82:	cb 01       	movw	r24, r22
     b84:	80 95       	com	r24
     b86:	94 2f       	mov	r25, r20
     b88:	98 23       	and	r25, r24
     b8a:	91 bb       	out	0x11, r25	; 17
     b8c:	92 b3       	in	r25, 0x12	; 18
     b8e:	89 23       	and	r24, r25
     b90:	82 bb       	out	0x12, r24	; 18
     b92:	9f c0       	rjmp	.+318    	; 0xcd2 <DIO_INITPIN+0x1fe>
     b94:	91 30       	cpi	r25, 0x01	; 1
     b96:	c1 f0       	breq	.+48     	; 0xbc8 <DIO_INITPIN+0xf4>
     b98:	28 f0       	brcs	.+10     	; 0xba4 <DIO_INITPIN+0xd0>
     b9a:	92 30       	cpi	r25, 0x02	; 2
     b9c:	39 f1       	breq	.+78     	; 0xbec <DIO_INITPIN+0x118>
     b9e:	93 30       	cpi	r25, 0x03	; 3
     ba0:	b9 f1       	breq	.+110    	; 0xc10 <DIO_INITPIN+0x13c>
     ba2:	97 c0       	rjmp	.+302    	; 0xcd2 <DIO_INITPIN+0x1fe>
     ba4:	4a b3       	in	r20, 0x1a	; 26
     ba6:	21 e0       	ldi	r18, 0x01	; 1
     ba8:	30 e0       	ldi	r19, 0x00	; 0
     baa:	b9 01       	movw	r22, r18
     bac:	02 c0       	rjmp	.+4      	; 0xbb2 <DIO_INITPIN+0xde>
     bae:	66 0f       	add	r22, r22
     bb0:	77 1f       	adc	r23, r23
     bb2:	8a 95       	dec	r24
     bb4:	e2 f7       	brpl	.-8      	; 0xbae <DIO_INITPIN+0xda>
     bb6:	cb 01       	movw	r24, r22
     bb8:	96 2f       	mov	r25, r22
     bba:	90 95       	com	r25
     bbc:	94 23       	and	r25, r20
     bbe:	9a bb       	out	0x1a, r25	; 26
     bc0:	9b b3       	in	r25, 0x1b	; 27
     bc2:	89 2b       	or	r24, r25
     bc4:	8b bb       	out	0x1b, r24	; 27
     bc6:	85 c0       	rjmp	.+266    	; 0xcd2 <DIO_INITPIN+0x1fe>
     bc8:	47 b3       	in	r20, 0x17	; 23
     bca:	21 e0       	ldi	r18, 0x01	; 1
     bcc:	30 e0       	ldi	r19, 0x00	; 0
     bce:	b9 01       	movw	r22, r18
     bd0:	02 c0       	rjmp	.+4      	; 0xbd6 <DIO_INITPIN+0x102>
     bd2:	66 0f       	add	r22, r22
     bd4:	77 1f       	adc	r23, r23
     bd6:	8a 95       	dec	r24
     bd8:	e2 f7       	brpl	.-8      	; 0xbd2 <DIO_INITPIN+0xfe>
     bda:	cb 01       	movw	r24, r22
     bdc:	96 2f       	mov	r25, r22
     bde:	90 95       	com	r25
     be0:	94 23       	and	r25, r20
     be2:	97 bb       	out	0x17, r25	; 23
     be4:	98 b3       	in	r25, 0x18	; 24
     be6:	89 2b       	or	r24, r25
     be8:	88 bb       	out	0x18, r24	; 24
     bea:	73 c0       	rjmp	.+230    	; 0xcd2 <DIO_INITPIN+0x1fe>
     bec:	44 b3       	in	r20, 0x14	; 20
     bee:	21 e0       	ldi	r18, 0x01	; 1
     bf0:	30 e0       	ldi	r19, 0x00	; 0
     bf2:	b9 01       	movw	r22, r18
     bf4:	02 c0       	rjmp	.+4      	; 0xbfa <DIO_INITPIN+0x126>
     bf6:	66 0f       	add	r22, r22
     bf8:	77 1f       	adc	r23, r23
     bfa:	8a 95       	dec	r24
     bfc:	e2 f7       	brpl	.-8      	; 0xbf6 <DIO_INITPIN+0x122>
     bfe:	cb 01       	movw	r24, r22
     c00:	96 2f       	mov	r25, r22
     c02:	90 95       	com	r25
     c04:	94 23       	and	r25, r20
     c06:	94 bb       	out	0x14, r25	; 20
     c08:	95 b3       	in	r25, 0x15	; 21
     c0a:	89 2b       	or	r24, r25
     c0c:	85 bb       	out	0x15, r24	; 21
     c0e:	61 c0       	rjmp	.+194    	; 0xcd2 <DIO_INITPIN+0x1fe>
     c10:	41 b3       	in	r20, 0x11	; 17
     c12:	21 e0       	ldi	r18, 0x01	; 1
     c14:	30 e0       	ldi	r19, 0x00	; 0
     c16:	b9 01       	movw	r22, r18
     c18:	02 c0       	rjmp	.+4      	; 0xc1e <DIO_INITPIN+0x14a>
     c1a:	66 0f       	add	r22, r22
     c1c:	77 1f       	adc	r23, r23
     c1e:	8a 95       	dec	r24
     c20:	e2 f7       	brpl	.-8      	; 0xc1a <DIO_INITPIN+0x146>
     c22:	cb 01       	movw	r24, r22
     c24:	96 2f       	mov	r25, r22
     c26:	90 95       	com	r25
     c28:	94 23       	and	r25, r20
     c2a:	91 bb       	out	0x11, r25	; 17
     c2c:	92 b3       	in	r25, 0x12	; 18
     c2e:	89 2b       	or	r24, r25
     c30:	82 bb       	out	0x12, r24	; 18
     c32:	4f c0       	rjmp	.+158    	; 0xcd2 <DIO_INITPIN+0x1fe>
     c34:	91 30       	cpi	r25, 0x01	; 1
     c36:	c1 f0       	breq	.+48     	; 0xc68 <DIO_INITPIN+0x194>
     c38:	28 f0       	brcs	.+10     	; 0xc44 <DIO_INITPIN+0x170>
     c3a:	92 30       	cpi	r25, 0x02	; 2
     c3c:	39 f1       	breq	.+78     	; 0xc8c <DIO_INITPIN+0x1b8>
     c3e:	93 30       	cpi	r25, 0x03	; 3
     c40:	b9 f1       	breq	.+110    	; 0xcb0 <DIO_INITPIN+0x1dc>
     c42:	47 c0       	rjmp	.+142    	; 0xcd2 <DIO_INITPIN+0x1fe>
     c44:	4b b3       	in	r20, 0x1b	; 27
     c46:	21 e0       	ldi	r18, 0x01	; 1
     c48:	30 e0       	ldi	r19, 0x00	; 0
     c4a:	b9 01       	movw	r22, r18
     c4c:	02 c0       	rjmp	.+4      	; 0xc52 <DIO_INITPIN+0x17e>
     c4e:	66 0f       	add	r22, r22
     c50:	77 1f       	adc	r23, r23
     c52:	8a 95       	dec	r24
     c54:	e2 f7       	brpl	.-8      	; 0xc4e <DIO_INITPIN+0x17a>
     c56:	cb 01       	movw	r24, r22
     c58:	96 2f       	mov	r25, r22
     c5a:	90 95       	com	r25
     c5c:	94 23       	and	r25, r20
     c5e:	9b bb       	out	0x1b, r25	; 27
     c60:	9a b3       	in	r25, 0x1a	; 26
     c62:	89 2b       	or	r24, r25
     c64:	8a bb       	out	0x1a, r24	; 26
     c66:	35 c0       	rjmp	.+106    	; 0xcd2 <DIO_INITPIN+0x1fe>
     c68:	48 b3       	in	r20, 0x18	; 24
     c6a:	21 e0       	ldi	r18, 0x01	; 1
     c6c:	30 e0       	ldi	r19, 0x00	; 0
     c6e:	b9 01       	movw	r22, r18
     c70:	02 c0       	rjmp	.+4      	; 0xc76 <DIO_INITPIN+0x1a2>
     c72:	66 0f       	add	r22, r22
     c74:	77 1f       	adc	r23, r23
     c76:	8a 95       	dec	r24
     c78:	e2 f7       	brpl	.-8      	; 0xc72 <DIO_INITPIN+0x19e>
     c7a:	cb 01       	movw	r24, r22
     c7c:	96 2f       	mov	r25, r22
     c7e:	90 95       	com	r25
     c80:	94 23       	and	r25, r20
     c82:	98 bb       	out	0x18, r25	; 24
     c84:	97 b3       	in	r25, 0x17	; 23
     c86:	89 2b       	or	r24, r25
     c88:	87 bb       	out	0x17, r24	; 23
     c8a:	23 c0       	rjmp	.+70     	; 0xcd2 <DIO_INITPIN+0x1fe>
     c8c:	45 b3       	in	r20, 0x15	; 21
     c8e:	21 e0       	ldi	r18, 0x01	; 1
     c90:	30 e0       	ldi	r19, 0x00	; 0
     c92:	b9 01       	movw	r22, r18
     c94:	02 c0       	rjmp	.+4      	; 0xc9a <DIO_INITPIN+0x1c6>
     c96:	66 0f       	add	r22, r22
     c98:	77 1f       	adc	r23, r23
     c9a:	8a 95       	dec	r24
     c9c:	e2 f7       	brpl	.-8      	; 0xc96 <DIO_INITPIN+0x1c2>
     c9e:	cb 01       	movw	r24, r22
     ca0:	96 2f       	mov	r25, r22
     ca2:	90 95       	com	r25
     ca4:	94 23       	and	r25, r20
     ca6:	95 bb       	out	0x15, r25	; 21
     ca8:	94 b3       	in	r25, 0x14	; 20
     caa:	89 2b       	or	r24, r25
     cac:	84 bb       	out	0x14, r24	; 20
     cae:	11 c0       	rjmp	.+34     	; 0xcd2 <DIO_INITPIN+0x1fe>
     cb0:	42 b3       	in	r20, 0x12	; 18
     cb2:	21 e0       	ldi	r18, 0x01	; 1
     cb4:	30 e0       	ldi	r19, 0x00	; 0
     cb6:	b9 01       	movw	r22, r18
     cb8:	02 c0       	rjmp	.+4      	; 0xcbe <DIO_INITPIN+0x1ea>
     cba:	66 0f       	add	r22, r22
     cbc:	77 1f       	adc	r23, r23
     cbe:	8a 95       	dec	r24
     cc0:	e2 f7       	brpl	.-8      	; 0xcba <DIO_INITPIN+0x1e6>
     cc2:	cb 01       	movw	r24, r22
     cc4:	96 2f       	mov	r25, r22
     cc6:	90 95       	com	r25
     cc8:	94 23       	and	r25, r20
     cca:	92 bb       	out	0x12, r25	; 18
     ccc:	91 b3       	in	r25, 0x11	; 17
     cce:	89 2b       	or	r24, r25
     cd0:	81 bb       	out	0x11, r24	; 17
     cd2:	08 95       	ret
     cd4:	82 e0       	ldi	r24, 0x02	; 2
     cd6:	08 95       	ret

00000cd8 <DIO_WRITEPIN>:
     cd8:	98 2f       	mov	r25, r24
     cda:	96 95       	lsr	r25
     cdc:	96 95       	lsr	r25
     cde:	96 95       	lsr	r25
     ce0:	87 70       	andi	r24, 0x07	; 7
     ce2:	95 30       	cpi	r25, 0x05	; 5
     ce4:	08 f0       	brcs	.+2      	; 0xce8 <DIO_WRITEPIN+0x10>
     ce6:	8d c0       	rjmp	.+282    	; 0xe02 <DIO_WRITEPIN+0x12a>
     ce8:	63 30       	cpi	r22, 0x03	; 3
     cea:	08 f0       	brcs	.+2      	; 0xcee <DIO_WRITEPIN+0x16>
     cec:	8c c0       	rjmp	.+280    	; 0xe06 <DIO_WRITEPIN+0x12e>
     cee:	61 30       	cpi	r22, 0x01	; 1
     cf0:	09 f0       	breq	.+2      	; 0xcf4 <DIO_WRITEPIN+0x1c>
     cf2:	40 c0       	rjmp	.+128    	; 0xd74 <DIO_WRITEPIN+0x9c>
     cf4:	91 30       	cpi	r25, 0x01	; 1
     cf6:	a1 f0       	breq	.+40     	; 0xd20 <DIO_WRITEPIN+0x48>
     cf8:	28 f0       	brcs	.+10     	; 0xd04 <DIO_WRITEPIN+0x2c>
     cfa:	92 30       	cpi	r25, 0x02	; 2
     cfc:	f9 f0       	breq	.+62     	; 0xd3c <DIO_WRITEPIN+0x64>
     cfe:	93 30       	cpi	r25, 0x03	; 3
     d00:	59 f1       	breq	.+86     	; 0xd58 <DIO_WRITEPIN+0x80>
     d02:	83 c0       	rjmp	.+262    	; 0xe0a <DIO_WRITEPIN+0x132>
     d04:	4b b3       	in	r20, 0x1b	; 27
     d06:	21 e0       	ldi	r18, 0x01	; 1
     d08:	30 e0       	ldi	r19, 0x00	; 0
     d0a:	b9 01       	movw	r22, r18
     d0c:	02 c0       	rjmp	.+4      	; 0xd12 <DIO_WRITEPIN+0x3a>
     d0e:	66 0f       	add	r22, r22
     d10:	77 1f       	adc	r23, r23
     d12:	8a 95       	dec	r24
     d14:	e2 f7       	brpl	.-8      	; 0xd0e <DIO_WRITEPIN+0x36>
     d16:	cb 01       	movw	r24, r22
     d18:	84 2b       	or	r24, r20
     d1a:	8b bb       	out	0x1b, r24	; 27
     d1c:	80 e0       	ldi	r24, 0x00	; 0
     d1e:	08 95       	ret
     d20:	48 b3       	in	r20, 0x18	; 24
     d22:	21 e0       	ldi	r18, 0x01	; 1
     d24:	30 e0       	ldi	r19, 0x00	; 0
     d26:	b9 01       	movw	r22, r18
     d28:	02 c0       	rjmp	.+4      	; 0xd2e <DIO_WRITEPIN+0x56>
     d2a:	66 0f       	add	r22, r22
     d2c:	77 1f       	adc	r23, r23
     d2e:	8a 95       	dec	r24
     d30:	e2 f7       	brpl	.-8      	; 0xd2a <DIO_WRITEPIN+0x52>
     d32:	cb 01       	movw	r24, r22
     d34:	84 2b       	or	r24, r20
     d36:	88 bb       	out	0x18, r24	; 24
     d38:	80 e0       	ldi	r24, 0x00	; 0
     d3a:	08 95       	ret
     d3c:	45 b3       	in	r20, 0x15	; 21
     d3e:	21 e0       	ldi	r18, 0x01	; 1
     d40:	30 e0       	ldi	r19, 0x00	; 0
     d42:	b9 01       	movw	r22, r18
     d44:	02 c0       	rjmp	.+4      	; 0xd4a <DIO_WRITEPIN+0x72>
     d46:	66 0f       	add	r22, r22
     d48:	77 1f       	adc	r23, r23
     d4a:	8a 95       	dec	r24
     d4c:	e2 f7       	brpl	.-8      	; 0xd46 <DIO_WRITEPIN+0x6e>
     d4e:	cb 01       	movw	r24, r22
     d50:	84 2b       	or	r24, r20
     d52:	85 bb       	out	0x15, r24	; 21
     d54:	80 e0       	ldi	r24, 0x00	; 0
     d56:	08 95       	ret
     d58:	42 b3       	in	r20, 0x12	; 18
     d5a:	21 e0       	ldi	r18, 0x01	; 1
     d5c:	30 e0       	ldi	r19, 0x00	; 0
     d5e:	b9 01       	movw	r22, r18
     d60:	02 c0       	rjmp	.+4      	; 0xd66 <DIO_WRITEPIN+0x8e>
     d62:	66 0f       	add	r22, r22
     d64:	77 1f       	adc	r23, r23
     d66:	8a 95       	dec	r24
     d68:	e2 f7       	brpl	.-8      	; 0xd62 <DIO_WRITEPIN+0x8a>
     d6a:	cb 01       	movw	r24, r22
     d6c:	84 2b       	or	r24, r20
     d6e:	82 bb       	out	0x12, r24	; 18
     d70:	80 e0       	ldi	r24, 0x00	; 0
     d72:	08 95       	ret
     d74:	61 11       	cpse	r22, r1
     d76:	44 c0       	rjmp	.+136    	; 0xe00 <DIO_WRITEPIN+0x128>
     d78:	91 30       	cpi	r25, 0x01	; 1
     d7a:	a9 f0       	breq	.+42     	; 0xda6 <DIO_WRITEPIN+0xce>
     d7c:	28 f0       	brcs	.+10     	; 0xd88 <DIO_WRITEPIN+0xb0>
     d7e:	92 30       	cpi	r25, 0x02	; 2
     d80:	09 f1       	breq	.+66     	; 0xdc4 <DIO_WRITEPIN+0xec>
     d82:	93 30       	cpi	r25, 0x03	; 3
     d84:	71 f1       	breq	.+92     	; 0xde2 <DIO_WRITEPIN+0x10a>
     d86:	43 c0       	rjmp	.+134    	; 0xe0e <DIO_WRITEPIN+0x136>
     d88:	4b b3       	in	r20, 0x1b	; 27
     d8a:	21 e0       	ldi	r18, 0x01	; 1
     d8c:	30 e0       	ldi	r19, 0x00	; 0
     d8e:	b9 01       	movw	r22, r18
     d90:	02 c0       	rjmp	.+4      	; 0xd96 <DIO_WRITEPIN+0xbe>
     d92:	66 0f       	add	r22, r22
     d94:	77 1f       	adc	r23, r23
     d96:	8a 95       	dec	r24
     d98:	e2 f7       	brpl	.-8      	; 0xd92 <DIO_WRITEPIN+0xba>
     d9a:	cb 01       	movw	r24, r22
     d9c:	80 95       	com	r24
     d9e:	84 23       	and	r24, r20
     da0:	8b bb       	out	0x1b, r24	; 27
     da2:	80 e0       	ldi	r24, 0x00	; 0
     da4:	08 95       	ret
     da6:	48 b3       	in	r20, 0x18	; 24
     da8:	21 e0       	ldi	r18, 0x01	; 1
     daa:	30 e0       	ldi	r19, 0x00	; 0
     dac:	b9 01       	movw	r22, r18
     dae:	02 c0       	rjmp	.+4      	; 0xdb4 <DIO_WRITEPIN+0xdc>
     db0:	66 0f       	add	r22, r22
     db2:	77 1f       	adc	r23, r23
     db4:	8a 95       	dec	r24
     db6:	e2 f7       	brpl	.-8      	; 0xdb0 <DIO_WRITEPIN+0xd8>
     db8:	cb 01       	movw	r24, r22
     dba:	80 95       	com	r24
     dbc:	84 23       	and	r24, r20
     dbe:	88 bb       	out	0x18, r24	; 24
     dc0:	80 e0       	ldi	r24, 0x00	; 0
     dc2:	08 95       	ret
     dc4:	45 b3       	in	r20, 0x15	; 21
     dc6:	21 e0       	ldi	r18, 0x01	; 1
     dc8:	30 e0       	ldi	r19, 0x00	; 0
     dca:	b9 01       	movw	r22, r18
     dcc:	02 c0       	rjmp	.+4      	; 0xdd2 <DIO_WRITEPIN+0xfa>
     dce:	66 0f       	add	r22, r22
     dd0:	77 1f       	adc	r23, r23
     dd2:	8a 95       	dec	r24
     dd4:	e2 f7       	brpl	.-8      	; 0xdce <DIO_WRITEPIN+0xf6>
     dd6:	cb 01       	movw	r24, r22
     dd8:	80 95       	com	r24
     dda:	84 23       	and	r24, r20
     ddc:	85 bb       	out	0x15, r24	; 21
     dde:	80 e0       	ldi	r24, 0x00	; 0
     de0:	08 95       	ret
     de2:	42 b3       	in	r20, 0x12	; 18
     de4:	21 e0       	ldi	r18, 0x01	; 1
     de6:	30 e0       	ldi	r19, 0x00	; 0
     de8:	b9 01       	movw	r22, r18
     dea:	02 c0       	rjmp	.+4      	; 0xdf0 <DIO_WRITEPIN+0x118>
     dec:	66 0f       	add	r22, r22
     dee:	77 1f       	adc	r23, r23
     df0:	8a 95       	dec	r24
     df2:	e2 f7       	brpl	.-8      	; 0xdec <DIO_WRITEPIN+0x114>
     df4:	cb 01       	movw	r24, r22
     df6:	80 95       	com	r24
     df8:	84 23       	and	r24, r20
     dfa:	82 bb       	out	0x12, r24	; 18
     dfc:	80 e0       	ldi	r24, 0x00	; 0
     dfe:	08 95       	ret
     e00:	08 95       	ret
     e02:	82 e0       	ldi	r24, 0x02	; 2
     e04:	08 95       	ret
     e06:	83 e0       	ldi	r24, 0x03	; 3
     e08:	08 95       	ret
     e0a:	80 e0       	ldi	r24, 0x00	; 0
     e0c:	08 95       	ret
     e0e:	80 e0       	ldi	r24, 0x00	; 0
     e10:	08 95       	ret

00000e12 <DIO_READPIN>:
     e12:	98 2f       	mov	r25, r24
     e14:	96 95       	lsr	r25
     e16:	96 95       	lsr	r25
     e18:	96 95       	lsr	r25
     e1a:	87 70       	andi	r24, 0x07	; 7
     e1c:	95 30       	cpi	r25, 0x05	; 5
     e1e:	08 f0       	brcs	.+2      	; 0xe22 <DIO_READPIN+0x10>
     e20:	40 c0       	rjmp	.+128    	; 0xea2 <DIO_READPIN+0x90>
     e22:	91 30       	cpi	r25, 0x01	; 1
     e24:	a1 f0       	breq	.+40     	; 0xe4e <DIO_READPIN+0x3c>
     e26:	28 f0       	brcs	.+10     	; 0xe32 <DIO_READPIN+0x20>
     e28:	92 30       	cpi	r25, 0x02	; 2
     e2a:	f9 f0       	breq	.+62     	; 0xe6a <DIO_READPIN+0x58>
     e2c:	93 30       	cpi	r25, 0x03	; 3
     e2e:	59 f1       	breq	.+86     	; 0xe86 <DIO_READPIN+0x74>
     e30:	3a c0       	rjmp	.+116    	; 0xea6 <DIO_READPIN+0x94>
     e32:	29 b3       	in	r18, 0x19	; 25
     e34:	30 e0       	ldi	r19, 0x00	; 0
     e36:	a9 01       	movw	r20, r18
     e38:	02 c0       	rjmp	.+4      	; 0xe3e <DIO_READPIN+0x2c>
     e3a:	55 95       	asr	r21
     e3c:	47 95       	ror	r20
     e3e:	8a 95       	dec	r24
     e40:	e2 f7       	brpl	.-8      	; 0xe3a <DIO_READPIN+0x28>
     e42:	ca 01       	movw	r24, r20
     e44:	81 70       	andi	r24, 0x01	; 1
     e46:	fb 01       	movw	r30, r22
     e48:	80 83       	st	Z, r24
     e4a:	80 e0       	ldi	r24, 0x00	; 0
     e4c:	08 95       	ret
     e4e:	26 b3       	in	r18, 0x16	; 22
     e50:	30 e0       	ldi	r19, 0x00	; 0
     e52:	a9 01       	movw	r20, r18
     e54:	02 c0       	rjmp	.+4      	; 0xe5a <DIO_READPIN+0x48>
     e56:	55 95       	asr	r21
     e58:	47 95       	ror	r20
     e5a:	8a 95       	dec	r24
     e5c:	e2 f7       	brpl	.-8      	; 0xe56 <DIO_READPIN+0x44>
     e5e:	ca 01       	movw	r24, r20
     e60:	81 70       	andi	r24, 0x01	; 1
     e62:	fb 01       	movw	r30, r22
     e64:	80 83       	st	Z, r24
     e66:	80 e0       	ldi	r24, 0x00	; 0
     e68:	08 95       	ret
     e6a:	23 b3       	in	r18, 0x13	; 19
     e6c:	30 e0       	ldi	r19, 0x00	; 0
     e6e:	a9 01       	movw	r20, r18
     e70:	02 c0       	rjmp	.+4      	; 0xe76 <DIO_READPIN+0x64>
     e72:	55 95       	asr	r21
     e74:	47 95       	ror	r20
     e76:	8a 95       	dec	r24
     e78:	e2 f7       	brpl	.-8      	; 0xe72 <DIO_READPIN+0x60>
     e7a:	ca 01       	movw	r24, r20
     e7c:	81 70       	andi	r24, 0x01	; 1
     e7e:	fb 01       	movw	r30, r22
     e80:	80 83       	st	Z, r24
     e82:	80 e0       	ldi	r24, 0x00	; 0
     e84:	08 95       	ret
     e86:	20 b3       	in	r18, 0x10	; 16
     e88:	30 e0       	ldi	r19, 0x00	; 0
     e8a:	a9 01       	movw	r20, r18
     e8c:	02 c0       	rjmp	.+4      	; 0xe92 <DIO_READPIN+0x80>
     e8e:	55 95       	asr	r21
     e90:	47 95       	ror	r20
     e92:	8a 95       	dec	r24
     e94:	e2 f7       	brpl	.-8      	; 0xe8e <DIO_READPIN+0x7c>
     e96:	ca 01       	movw	r24, r20
     e98:	81 70       	andi	r24, 0x01	; 1
     e9a:	fb 01       	movw	r30, r22
     e9c:	80 83       	st	Z, r24
     e9e:	80 e0       	ldi	r24, 0x00	; 0
     ea0:	08 95       	ret
     ea2:	82 e0       	ldi	r24, 0x02	; 2
     ea4:	08 95       	ret
     ea6:	80 e0       	ldi	r24, 0x00	; 0
     ea8:	08 95       	ret

00000eaa <TIMER_0_init>:
	TIMER_2_init(NORMAL_MODE);
	TIMER_2_setIntialValue(0);
	TIMER_2_start(PRECALER_1);
	TIMER_2_OvfNum(ovfNum2);
	
}
     eaa:	81 30       	cpi	r24, 0x01	; 1
     eac:	f1 f0       	breq	.+60     	; 0xeea <TIMER_0_init+0x40>
     eae:	28 f0       	brcs	.+10     	; 0xeba <TIMER_0_init+0x10>
     eb0:	82 30       	cpi	r24, 0x02	; 2
     eb2:	99 f0       	breq	.+38     	; 0xeda <TIMER_0_init+0x30>
     eb4:	83 30       	cpi	r24, 0x03	; 3
     eb6:	49 f0       	breq	.+18     	; 0xeca <TIMER_0_init+0x20>
     eb8:	20 c0       	rjmp	.+64     	; 0xefa <TIMER_0_init+0x50>
     eba:	83 b7       	in	r24, 0x33	; 51
     ebc:	8f 7b       	andi	r24, 0xBF	; 191
     ebe:	83 bf       	out	0x33, r24	; 51
     ec0:	83 b7       	in	r24, 0x33	; 51
     ec2:	87 7f       	andi	r24, 0xF7	; 247
     ec4:	83 bf       	out	0x33, r24	; 51
     ec6:	84 e0       	ldi	r24, 0x04	; 4
     ec8:	08 95       	ret
     eca:	83 b7       	in	r24, 0x33	; 51
     ecc:	80 64       	ori	r24, 0x40	; 64
     ece:	83 bf       	out	0x33, r24	; 51
     ed0:	83 b7       	in	r24, 0x33	; 51
     ed2:	87 7f       	andi	r24, 0xF7	; 247
     ed4:	83 bf       	out	0x33, r24	; 51
     ed6:	84 e0       	ldi	r24, 0x04	; 4
     ed8:	08 95       	ret
     eda:	83 b7       	in	r24, 0x33	; 51
     edc:	8f 7b       	andi	r24, 0xBF	; 191
     ede:	83 bf       	out	0x33, r24	; 51
     ee0:	83 b7       	in	r24, 0x33	; 51
     ee2:	88 60       	ori	r24, 0x08	; 8
     ee4:	83 bf       	out	0x33, r24	; 51
     ee6:	84 e0       	ldi	r24, 0x04	; 4
     ee8:	08 95       	ret
     eea:	83 b7       	in	r24, 0x33	; 51
     eec:	80 64       	ori	r24, 0x40	; 64
     eee:	83 bf       	out	0x33, r24	; 51
     ef0:	83 b7       	in	r24, 0x33	; 51
     ef2:	88 60       	ori	r24, 0x08	; 8
     ef4:	83 bf       	out	0x33, r24	; 51
     ef6:	84 e0       	ldi	r24, 0x04	; 4
     ef8:	08 95       	ret
     efa:	81 e0       	ldi	r24, 0x01	; 1
     efc:	08 95       	ret

00000efe <TIMER_0_start>:
     efe:	82 30       	cpi	r24, 0x02	; 2
     f00:	09 f1       	breq	.+66     	; 0xf44 <TIMER_0_start+0x46>
     f02:	28 f4       	brcc	.+10     	; 0xf0e <TIMER_0_start+0x10>
     f04:	88 23       	and	r24, r24
     f06:	41 f0       	breq	.+16     	; 0xf18 <TIMER_0_start+0x1a>
     f08:	81 30       	cpi	r24, 0x01	; 1
     f0a:	89 f0       	breq	.+34     	; 0xf2e <TIMER_0_start+0x30>
     f0c:	3c c0       	rjmp	.+120    	; 0xf86 <TIMER_0_start+0x88>
     f0e:	85 30       	cpi	r24, 0x05	; 5
     f10:	21 f1       	breq	.+72     	; 0xf5a <TIMER_0_start+0x5c>
     f12:	86 30       	cpi	r24, 0x06	; 6
     f14:	69 f1       	breq	.+90     	; 0xf70 <TIMER_0_start+0x72>
     f16:	37 c0       	rjmp	.+110    	; 0xf86 <TIMER_0_start+0x88>
     f18:	83 b7       	in	r24, 0x33	; 51
     f1a:	81 60       	ori	r24, 0x01	; 1
     f1c:	83 bf       	out	0x33, r24	; 51
     f1e:	83 b7       	in	r24, 0x33	; 51
     f20:	8d 7f       	andi	r24, 0xFD	; 253
     f22:	83 bf       	out	0x33, r24	; 51
     f24:	83 b7       	in	r24, 0x33	; 51
     f26:	8b 7f       	andi	r24, 0xFB	; 251
     f28:	83 bf       	out	0x33, r24	; 51
     f2a:	84 e0       	ldi	r24, 0x04	; 4
     f2c:	08 95       	ret
     f2e:	83 b7       	in	r24, 0x33	; 51
     f30:	82 60       	ori	r24, 0x02	; 2
     f32:	83 bf       	out	0x33, r24	; 51
     f34:	83 b7       	in	r24, 0x33	; 51
     f36:	8e 7f       	andi	r24, 0xFE	; 254
     f38:	83 bf       	out	0x33, r24	; 51
     f3a:	83 b7       	in	r24, 0x33	; 51
     f3c:	8b 7f       	andi	r24, 0xFB	; 251
     f3e:	83 bf       	out	0x33, r24	; 51
     f40:	84 e0       	ldi	r24, 0x04	; 4
     f42:	08 95       	ret
     f44:	83 b7       	in	r24, 0x33	; 51
     f46:	81 60       	ori	r24, 0x01	; 1
     f48:	83 bf       	out	0x33, r24	; 51
     f4a:	83 b7       	in	r24, 0x33	; 51
     f4c:	82 60       	ori	r24, 0x02	; 2
     f4e:	83 bf       	out	0x33, r24	; 51
     f50:	83 b7       	in	r24, 0x33	; 51
     f52:	8b 7f       	andi	r24, 0xFB	; 251
     f54:	83 bf       	out	0x33, r24	; 51
     f56:	84 e0       	ldi	r24, 0x04	; 4
     f58:	08 95       	ret
     f5a:	83 b7       	in	r24, 0x33	; 51
     f5c:	84 60       	ori	r24, 0x04	; 4
     f5e:	83 bf       	out	0x33, r24	; 51
     f60:	83 b7       	in	r24, 0x33	; 51
     f62:	8d 7f       	andi	r24, 0xFD	; 253
     f64:	83 bf       	out	0x33, r24	; 51
     f66:	83 b7       	in	r24, 0x33	; 51
     f68:	8e 7f       	andi	r24, 0xFE	; 254
     f6a:	83 bf       	out	0x33, r24	; 51
     f6c:	84 e0       	ldi	r24, 0x04	; 4
     f6e:	08 95       	ret
     f70:	83 b7       	in	r24, 0x33	; 51
     f72:	81 60       	ori	r24, 0x01	; 1
     f74:	83 bf       	out	0x33, r24	; 51
     f76:	83 b7       	in	r24, 0x33	; 51
     f78:	8d 7f       	andi	r24, 0xFD	; 253
     f7a:	83 bf       	out	0x33, r24	; 51
     f7c:	83 b7       	in	r24, 0x33	; 51
     f7e:	84 60       	ori	r24, 0x04	; 4
     f80:	83 bf       	out	0x33, r24	; 51
     f82:	84 e0       	ldi	r24, 0x04	; 4
     f84:	08 95       	ret
     f86:	80 e0       	ldi	r24, 0x00	; 0
     f88:	08 95       	ret

00000f8a <TIMER_0_setIntialValue>:
     f8a:	cf 92       	push	r12
     f8c:	df 92       	push	r13
     f8e:	ef 92       	push	r14
     f90:	ff 92       	push	r15
     f92:	6b 01       	movw	r12, r22
     f94:	7c 01       	movw	r14, r24
     f96:	20 e0       	ldi	r18, 0x00	; 0
     f98:	30 e0       	ldi	r19, 0x00	; 0
     f9a:	40 e8       	ldi	r20, 0x80	; 128
     f9c:	53 e4       	ldi	r21, 0x43	; 67
     f9e:	0e 94 e3 09 	call	0x13c6	; 0x13c6 <__cmpsf2>
     fa2:	88 23       	and	r24, r24
     fa4:	94 f4       	brge	.+36     	; 0xfca <TIMER_0_setIntialValue+0x40>
     fa6:	20 e0       	ldi	r18, 0x00	; 0
     fa8:	30 e0       	ldi	r19, 0x00	; 0
     faa:	a9 01       	movw	r20, r18
     fac:	c7 01       	movw	r24, r14
     fae:	b6 01       	movw	r22, r12
     fb0:	0e 94 7c 0b 	call	0x16f8	; 0x16f8 <__gesf2>
     fb4:	88 23       	and	r24, r24
     fb6:	5c f0       	brlt	.+22     	; 0xfce <TIMER_0_setIntialValue+0x44>
     fb8:	c7 01       	movw	r24, r14
     fba:	b6 01       	movw	r22, r12
     fbc:	0e 94 cc 09 	call	0x1398	; 0x1398 <ceil>
     fc0:	0e 94 5a 0a 	call	0x14b4	; 0x14b4 <__fixunssfsi>
     fc4:	62 bf       	out	0x32, r22	; 50
     fc6:	84 e0       	ldi	r24, 0x04	; 4
     fc8:	03 c0       	rjmp	.+6      	; 0xfd0 <TIMER_0_setIntialValue+0x46>
     fca:	83 e0       	ldi	r24, 0x03	; 3
     fcc:	01 c0       	rjmp	.+2      	; 0xfd0 <TIMER_0_setIntialValue+0x46>
     fce:	83 e0       	ldi	r24, 0x03	; 3
     fd0:	ff 90       	pop	r15
     fd2:	ef 90       	pop	r14
     fd4:	df 90       	pop	r13
     fd6:	cf 90       	pop	r12
     fd8:	08 95       	ret

00000fda <TIMER_0_OvfNum>:
     fda:	8f 92       	push	r8
     fdc:	9f 92       	push	r9
     fde:	af 92       	push	r10
     fe0:	bf 92       	push	r11
     fe2:	cf 92       	push	r12
     fe4:	df 92       	push	r13
     fe6:	ef 92       	push	r14
     fe8:	ff 92       	push	r15
     fea:	4b 01       	movw	r8, r22
     fec:	5c 01       	movw	r10, r24
     fee:	20 e0       	ldi	r18, 0x00	; 0
     ff0:	30 e0       	ldi	r19, 0x00	; 0
     ff2:	a9 01       	movw	r20, r18
     ff4:	0e 94 7c 0b 	call	0x16f8	; 0x16f8 <__gesf2>
     ff8:	18 16       	cp	r1, r24
     ffa:	94 f0       	brlt	.+36     	; 0x1020 <TIMER_0_OvfNum+0x46>
     ffc:	1e c0       	rjmp	.+60     	; 0x103a <TIMER_0_OvfNum+0x60>
     ffe:	08 b6       	in	r0, 0x38	; 56
    1000:	00 fe       	sbrs	r0, 0
    1002:	fd cf       	rjmp	.-6      	; 0xffe <TIMER_0_OvfNum+0x24>
    1004:	88 b7       	in	r24, 0x38	; 56
    1006:	81 60       	ori	r24, 0x01	; 1
    1008:	88 bf       	out	0x38, r24	; 56
    100a:	20 e0       	ldi	r18, 0x00	; 0
    100c:	30 e0       	ldi	r19, 0x00	; 0
    100e:	40 e8       	ldi	r20, 0x80	; 128
    1010:	5f e3       	ldi	r21, 0x3F	; 63
    1012:	c7 01       	movw	r24, r14
    1014:	b6 01       	movw	r22, r12
    1016:	0e 94 60 09 	call	0x12c0	; 0x12c0 <__addsf3>
    101a:	6b 01       	movw	r12, r22
    101c:	7c 01       	movw	r14, r24
    101e:	03 c0       	rjmp	.+6      	; 0x1026 <TIMER_0_OvfNum+0x4c>
    1020:	c1 2c       	mov	r12, r1
    1022:	d1 2c       	mov	r13, r1
    1024:	76 01       	movw	r14, r12
    1026:	a5 01       	movw	r20, r10
    1028:	94 01       	movw	r18, r8
    102a:	c7 01       	movw	r24, r14
    102c:	b6 01       	movw	r22, r12
    102e:	0e 94 e3 09 	call	0x13c6	; 0x13c6 <__cmpsf2>
    1032:	88 23       	and	r24, r24
    1034:	24 f3       	brlt	.-56     	; 0xffe <TIMER_0_OvfNum+0x24>
    1036:	84 e0       	ldi	r24, 0x04	; 4
    1038:	2a c0       	rjmp	.+84     	; 0x108e <TIMER_0_OvfNum+0xb4>
    103a:	20 e0       	ldi	r18, 0x00	; 0
    103c:	30 e0       	ldi	r19, 0x00	; 0
    103e:	a9 01       	movw	r20, r18
    1040:	c5 01       	movw	r24, r10
    1042:	b4 01       	movw	r22, r8
    1044:	0e 94 e3 09 	call	0x13c6	; 0x13c6 <__cmpsf2>
    1048:	18 16       	cp	r1, r24
    104a:	9c f4       	brge	.+38     	; 0x1072 <TIMER_0_OvfNum+0x98>
    104c:	82 e0       	ldi	r24, 0x02	; 2
    104e:	1f c0       	rjmp	.+62     	; 0x108e <TIMER_0_OvfNum+0xb4>
    1050:	08 b6       	in	r0, 0x38	; 56
    1052:	00 fe       	sbrs	r0, 0
    1054:	fd cf       	rjmp	.-6      	; 0x1050 <TIMER_0_OvfNum+0x76>
    1056:	88 b7       	in	r24, 0x38	; 56
    1058:	81 60       	ori	r24, 0x01	; 1
    105a:	88 bf       	out	0x38, r24	; 56
    105c:	20 e0       	ldi	r18, 0x00	; 0
    105e:	30 e0       	ldi	r19, 0x00	; 0
    1060:	40 e8       	ldi	r20, 0x80	; 128
    1062:	5f e3       	ldi	r21, 0x3F	; 63
    1064:	c7 01       	movw	r24, r14
    1066:	b6 01       	movw	r22, r12
    1068:	0e 94 60 09 	call	0x12c0	; 0x12c0 <__addsf3>
    106c:	6b 01       	movw	r12, r22
    106e:	7c 01       	movw	r14, r24
    1070:	03 c0       	rjmp	.+6      	; 0x1078 <TIMER_0_OvfNum+0x9e>
    1072:	c1 2c       	mov	r12, r1
    1074:	d1 2c       	mov	r13, r1
    1076:	76 01       	movw	r14, r12
    1078:	20 e0       	ldi	r18, 0x00	; 0
    107a:	30 e0       	ldi	r19, 0x00	; 0
    107c:	40 e8       	ldi	r20, 0x80	; 128
    107e:	5f e3       	ldi	r21, 0x3F	; 63
    1080:	c7 01       	movw	r24, r14
    1082:	b6 01       	movw	r22, r12
    1084:	0e 94 e3 09 	call	0x13c6	; 0x13c6 <__cmpsf2>
    1088:	88 23       	and	r24, r24
    108a:	14 f3       	brlt	.-60     	; 0x1050 <TIMER_0_OvfNum+0x76>
    108c:	84 e0       	ldi	r24, 0x04	; 4
    108e:	ff 90       	pop	r15
    1090:	ef 90       	pop	r14
    1092:	df 90       	pop	r13
    1094:	cf 90       	pop	r12
    1096:	bf 90       	pop	r11
    1098:	af 90       	pop	r10
    109a:	9f 90       	pop	r9
    109c:	8f 90       	pop	r8
    109e:	08 95       	ret

000010a0 <TIMER_0_DELAY_MS>:
    10a0:	20 e0       	ldi	r18, 0x00	; 0
    10a2:	30 e0       	ldi	r19, 0x00	; 0
    10a4:	4a e7       	ldi	r20, 0x7A	; 122
    10a6:	54 e4       	ldi	r21, 0x44	; 68
    10a8:	0e 94 e8 09 	call	0x13d0	; 0x13d0 <__divsf3>
    10ac:	2d eb       	ldi	r18, 0xBD	; 189
    10ae:	37 e3       	ldi	r19, 0x37	; 55
    10b0:	46 e8       	ldi	r20, 0x86	; 134
    10b2:	59 e3       	ldi	r21, 0x39	; 57
    10b4:	0e 94 e8 09 	call	0x13d0	; 0x13d0 <__divsf3>
    10b8:	0e 94 cc 09 	call	0x1398	; 0x1398 <ceil>
    10bc:	60 93 2e 01 	sts	0x012E, r22	; 0x80012e <g_ovfNum>
    10c0:	70 93 2f 01 	sts	0x012F, r23	; 0x80012f <g_ovfNum+0x1>
    10c4:	80 93 30 01 	sts	0x0130, r24	; 0x800130 <g_ovfNum+0x2>
    10c8:	90 93 31 01 	sts	0x0131, r25	; 0x800131 <g_ovfNum+0x3>
    10cc:	80 e0       	ldi	r24, 0x00	; 0
    10ce:	0e 94 55 07 	call	0xeaa	; 0xeaa <TIMER_0_init>
    10d2:	60 e0       	ldi	r22, 0x00	; 0
    10d4:	70 e0       	ldi	r23, 0x00	; 0
    10d6:	cb 01       	movw	r24, r22
    10d8:	0e 94 c5 07 	call	0xf8a	; 0xf8a <TIMER_0_setIntialValue>
    10dc:	80 e0       	ldi	r24, 0x00	; 0
    10de:	0e 94 7f 07 	call	0xefe	; 0xefe <TIMER_0_start>
    10e2:	60 91 2e 01 	lds	r22, 0x012E	; 0x80012e <g_ovfNum>
    10e6:	70 91 2f 01 	lds	r23, 0x012F	; 0x80012f <g_ovfNum+0x1>
    10ea:	80 91 30 01 	lds	r24, 0x0130	; 0x800130 <g_ovfNum+0x2>
    10ee:	90 91 31 01 	lds	r25, 0x0131	; 0x800131 <g_ovfNum+0x3>
    10f2:	0e 94 ed 07 	call	0xfda	; 0xfda <TIMER_0_OvfNum>
    10f6:	08 95       	ret

000010f8 <TIMER_2_init>:
    10f8:	81 30       	cpi	r24, 0x01	; 1
    10fa:	f1 f0       	breq	.+60     	; 0x1138 <TIMER_2_init+0x40>
    10fc:	28 f0       	brcs	.+10     	; 0x1108 <TIMER_2_init+0x10>
    10fe:	82 30       	cpi	r24, 0x02	; 2
    1100:	99 f0       	breq	.+38     	; 0x1128 <TIMER_2_init+0x30>
    1102:	83 30       	cpi	r24, 0x03	; 3
    1104:	49 f0       	breq	.+18     	; 0x1118 <TIMER_2_init+0x20>
    1106:	20 c0       	rjmp	.+64     	; 0x1148 <TIMER_2_init+0x50>
    1108:	85 b5       	in	r24, 0x25	; 37
    110a:	8f 7b       	andi	r24, 0xBF	; 191
    110c:	85 bd       	out	0x25, r24	; 37
    110e:	85 b5       	in	r24, 0x25	; 37
    1110:	87 7f       	andi	r24, 0xF7	; 247
    1112:	85 bd       	out	0x25, r24	; 37
    1114:	84 e0       	ldi	r24, 0x04	; 4
    1116:	08 95       	ret
    1118:	85 b5       	in	r24, 0x25	; 37
    111a:	80 64       	ori	r24, 0x40	; 64
    111c:	85 bd       	out	0x25, r24	; 37
    111e:	85 b5       	in	r24, 0x25	; 37
    1120:	87 7f       	andi	r24, 0xF7	; 247
    1122:	85 bd       	out	0x25, r24	; 37
    1124:	84 e0       	ldi	r24, 0x04	; 4
    1126:	08 95       	ret
    1128:	85 b5       	in	r24, 0x25	; 37
    112a:	8f 7b       	andi	r24, 0xBF	; 191
    112c:	85 bd       	out	0x25, r24	; 37
    112e:	85 b5       	in	r24, 0x25	; 37
    1130:	88 60       	ori	r24, 0x08	; 8
    1132:	85 bd       	out	0x25, r24	; 37
    1134:	84 e0       	ldi	r24, 0x04	; 4
    1136:	08 95       	ret
    1138:	85 b5       	in	r24, 0x25	; 37
    113a:	80 64       	ori	r24, 0x40	; 64
    113c:	85 bd       	out	0x25, r24	; 37
    113e:	85 b5       	in	r24, 0x25	; 37
    1140:	88 60       	ori	r24, 0x08	; 8
    1142:	85 bd       	out	0x25, r24	; 37
    1144:	84 e0       	ldi	r24, 0x04	; 4
    1146:	08 95       	ret
    1148:	81 e0       	ldi	r24, 0x01	; 1
    114a:	08 95       	ret

0000114c <TIMER_2_setIntialValue>:
    114c:	84 bd       	out	0x24, r24	; 36
    114e:	84 e0       	ldi	r24, 0x04	; 4
    1150:	08 95       	ret

00001152 <TIMER_2_start>:
    1152:	90 e0       	ldi	r25, 0x00	; 0
    1154:	87 30       	cpi	r24, 0x07	; 7
    1156:	91 05       	cpc	r25, r1
    1158:	08 f0       	brcs	.+2      	; 0x115c <TIMER_2_start+0xa>
    115a:	52 c0       	rjmp	.+164    	; 0x1200 <TIMER_2_start+0xae>
    115c:	fc 01       	movw	r30, r24
    115e:	e6 5d       	subi	r30, 0xD6	; 214
    1160:	ff 4f       	sbci	r31, 0xFF	; 255
    1162:	0c 94 10 0c 	jmp	0x1820	; 0x1820 <__tablejump2__>
    1166:	85 b5       	in	r24, 0x25	; 37
    1168:	81 60       	ori	r24, 0x01	; 1
    116a:	85 bd       	out	0x25, r24	; 37
    116c:	85 b5       	in	r24, 0x25	; 37
    116e:	8d 7f       	andi	r24, 0xFD	; 253
    1170:	85 bd       	out	0x25, r24	; 37
    1172:	85 b5       	in	r24, 0x25	; 37
    1174:	8b 7f       	andi	r24, 0xFB	; 251
    1176:	85 bd       	out	0x25, r24	; 37
    1178:	84 e0       	ldi	r24, 0x04	; 4
    117a:	08 95       	ret
    117c:	85 b5       	in	r24, 0x25	; 37
    117e:	82 60       	ori	r24, 0x02	; 2
    1180:	85 bd       	out	0x25, r24	; 37
    1182:	85 b5       	in	r24, 0x25	; 37
    1184:	8e 7f       	andi	r24, 0xFE	; 254
    1186:	85 bd       	out	0x25, r24	; 37
    1188:	85 b5       	in	r24, 0x25	; 37
    118a:	8b 7f       	andi	r24, 0xFB	; 251
    118c:	85 bd       	out	0x25, r24	; 37
    118e:	84 e0       	ldi	r24, 0x04	; 4
    1190:	08 95       	ret
    1192:	85 b5       	in	r24, 0x25	; 37
    1194:	81 60       	ori	r24, 0x01	; 1
    1196:	85 bd       	out	0x25, r24	; 37
    1198:	85 b5       	in	r24, 0x25	; 37
    119a:	82 60       	ori	r24, 0x02	; 2
    119c:	85 bd       	out	0x25, r24	; 37
    119e:	85 b5       	in	r24, 0x25	; 37
    11a0:	8b 7f       	andi	r24, 0xFB	; 251
    11a2:	85 bd       	out	0x25, r24	; 37
    11a4:	84 e0       	ldi	r24, 0x04	; 4
    11a6:	08 95       	ret
    11a8:	85 b5       	in	r24, 0x25	; 37
    11aa:	84 60       	ori	r24, 0x04	; 4
    11ac:	85 bd       	out	0x25, r24	; 37
    11ae:	85 b5       	in	r24, 0x25	; 37
    11b0:	8d 7f       	andi	r24, 0xFD	; 253
    11b2:	85 bd       	out	0x25, r24	; 37
    11b4:	85 b5       	in	r24, 0x25	; 37
    11b6:	8e 7f       	andi	r24, 0xFE	; 254
    11b8:	85 bd       	out	0x25, r24	; 37
    11ba:	84 e0       	ldi	r24, 0x04	; 4
    11bc:	08 95       	ret
    11be:	85 b5       	in	r24, 0x25	; 37
    11c0:	81 60       	ori	r24, 0x01	; 1
    11c2:	85 bd       	out	0x25, r24	; 37
    11c4:	85 b5       	in	r24, 0x25	; 37
    11c6:	8d 7f       	andi	r24, 0xFD	; 253
    11c8:	85 bd       	out	0x25, r24	; 37
    11ca:	85 b5       	in	r24, 0x25	; 37
    11cc:	84 60       	ori	r24, 0x04	; 4
    11ce:	85 bd       	out	0x25, r24	; 37
    11d0:	84 e0       	ldi	r24, 0x04	; 4
    11d2:	08 95       	ret
    11d4:	85 b5       	in	r24, 0x25	; 37
    11d6:	84 60       	ori	r24, 0x04	; 4
    11d8:	85 bd       	out	0x25, r24	; 37
    11da:	85 b5       	in	r24, 0x25	; 37
    11dc:	8e 7f       	andi	r24, 0xFE	; 254
    11de:	85 bd       	out	0x25, r24	; 37
    11e0:	85 b5       	in	r24, 0x25	; 37
    11e2:	82 60       	ori	r24, 0x02	; 2
    11e4:	85 bd       	out	0x25, r24	; 37
    11e6:	84 e0       	ldi	r24, 0x04	; 4
    11e8:	08 95       	ret
    11ea:	85 b5       	in	r24, 0x25	; 37
    11ec:	81 60       	ori	r24, 0x01	; 1
    11ee:	85 bd       	out	0x25, r24	; 37
    11f0:	85 b5       	in	r24, 0x25	; 37
    11f2:	82 60       	ori	r24, 0x02	; 2
    11f4:	85 bd       	out	0x25, r24	; 37
    11f6:	85 b5       	in	r24, 0x25	; 37
    11f8:	84 60       	ori	r24, 0x04	; 4
    11fa:	85 bd       	out	0x25, r24	; 37
    11fc:	84 e0       	ldi	r24, 0x04	; 4
    11fe:	08 95       	ret
    1200:	80 e0       	ldi	r24, 0x00	; 0
    1202:	08 95       	ret

00001204 <TIMER_2_INT>:




void TIMER_2_INT(){
	sei();
    1204:	78 94       	sei
	set_bit(TIMSK,TOIE2);
    1206:	89 b7       	in	r24, 0x39	; 57
    1208:	80 64       	ori	r24, 0x40	; 64
    120a:	89 bf       	out	0x39, r24	; 57
	TIMER_2_init(NORMAL_MODE);
    120c:	80 e0       	ldi	r24, 0x00	; 0
    120e:	0e 94 7c 08 	call	0x10f8	; 0x10f8 <TIMER_2_init>
	TIMER_2_setIntialValue(0);
    1212:	80 e0       	ldi	r24, 0x00	; 0
    1214:	0e 94 a6 08 	call	0x114c	; 0x114c <TIMER_2_setIntialValue>
	TIMER_2_start(PRECALER_1);
    1218:	80 e0       	ldi	r24, 0x00	; 0
    121a:	0e 94 a9 08 	call	0x1152	; 0x1152 <TIMER_2_start>
    121e:	08 95       	ret

00001220 <__vector_5>:
}




ISR(TIMER2_OVF){
    1220:	1f 92       	push	r1
    1222:	0f 92       	push	r0
    1224:	0f b6       	in	r0, 0x3f	; 63
    1226:	0f 92       	push	r0
    1228:	11 24       	eor	r1, r1
    122a:	2f 93       	push	r18
    122c:	8f 93       	push	r24
    122e:	9f 93       	push	r25
    1230:	af 93       	push	r26
    1232:	bf 93       	push	r27
	if(g_flagStage == 1 && g_flagTimer == 1){
    1234:	80 91 33 01 	lds	r24, 0x0133	; 0x800133 <g_flagStage>
    1238:	81 30       	cpi	r24, 0x01	; 1
    123a:	79 f5       	brne	.+94     	; 0x129a <__vector_5+0x7a>
    123c:	80 91 32 01 	lds	r24, 0x0132	; 0x800132 <g_flagTimer>
    1240:	81 30       	cpi	r24, 0x01	; 1
    1242:	59 f5       	brne	.+86     	; 0x129a <__vector_5+0x7a>
		
		if (ovf < 19532 ){
    1244:	80 91 2a 01 	lds	r24, 0x012A	; 0x80012a <__data_end>
    1248:	90 91 2b 01 	lds	r25, 0x012B	; 0x80012b <__data_end+0x1>
    124c:	a0 91 2c 01 	lds	r26, 0x012C	; 0x80012c <__data_end+0x2>
    1250:	b0 91 2d 01 	lds	r27, 0x012D	; 0x80012d <__data_end+0x3>
    1254:	8c 34       	cpi	r24, 0x4C	; 76
    1256:	2c e4       	ldi	r18, 0x4C	; 76
    1258:	92 07       	cpc	r25, r18
    125a:	a1 05       	cpc	r26, r1
    125c:	b1 05       	cpc	r27, r1
    125e:	64 f4       	brge	.+24     	; 0x1278 <__vector_5+0x58>
			ovf++;
    1260:	01 96       	adiw	r24, 0x01	; 1
    1262:	a1 1d       	adc	r26, r1
    1264:	b1 1d       	adc	r27, r1
    1266:	80 93 2a 01 	sts	0x012A, r24	; 0x80012a <__data_end>
    126a:	90 93 2b 01 	sts	0x012B, r25	; 0x80012b <__data_end+0x1>
    126e:	a0 93 2c 01 	sts	0x012C, r26	; 0x80012c <__data_end+0x2>
    1272:	b0 93 2d 01 	sts	0x012D, r27	; 0x80012d <__data_end+0x3>
    1276:	19 c0       	rjmp	.+50     	; 0x12aa <__vector_5+0x8a>
		}
		else if ( ovf == 19532){
    1278:	8c 34       	cpi	r24, 0x4C	; 76
    127a:	9c 44       	sbci	r25, 0x4C	; 76
    127c:	a1 05       	cpc	r26, r1
    127e:	b1 05       	cpc	r27, r1
    1280:	a1 f4       	brne	.+40     	; 0x12aa <__vector_5+0x8a>
			ovf =0 ;
    1282:	10 92 2a 01 	sts	0x012A, r1	; 0x80012a <__data_end>
    1286:	10 92 2b 01 	sts	0x012B, r1	; 0x80012b <__data_end+0x1>
    128a:	10 92 2c 01 	sts	0x012C, r1	; 0x80012c <__data_end+0x2>
    128e:	10 92 2d 01 	sts	0x012D, r1	; 0x80012d <__data_end+0x3>
			//g_tempValue = 20 ;
			g_flagStage = 2 ;
    1292:	82 e0       	ldi	r24, 0x02	; 2
    1294:	80 93 33 01 	sts	0x0133, r24	; 0x800133 <g_flagStage>
    1298:	08 c0       	rjmp	.+16     	; 0x12aa <__vector_5+0x8a>
			
			
		}
		
	}else{
			ovf =0 ;
    129a:	10 92 2a 01 	sts	0x012A, r1	; 0x80012a <__data_end>
    129e:	10 92 2b 01 	sts	0x012B, r1	; 0x80012b <__data_end+0x1>
    12a2:	10 92 2c 01 	sts	0x012C, r1	; 0x80012c <__data_end+0x2>
    12a6:	10 92 2d 01 	sts	0x012D, r1	; 0x80012d <__data_end+0x3>
	}
	
    12aa:	bf 91       	pop	r27
    12ac:	af 91       	pop	r26
    12ae:	9f 91       	pop	r25
    12b0:	8f 91       	pop	r24
    12b2:	2f 91       	pop	r18
    12b4:	0f 90       	pop	r0
    12b6:	0f be       	out	0x3f, r0	; 63
    12b8:	0f 90       	pop	r0
    12ba:	1f 90       	pop	r1
    12bc:	18 95       	reti

000012be <__subsf3>:
    12be:	50 58       	subi	r21, 0x80	; 128

000012c0 <__addsf3>:
    12c0:	bb 27       	eor	r27, r27
    12c2:	aa 27       	eor	r26, r26
    12c4:	0e 94 77 09 	call	0x12ee	; 0x12ee <__addsf3x>
    12c8:	0c 94 2a 0b 	jmp	0x1654	; 0x1654 <__fp_round>
    12cc:	0e 94 1c 0b 	call	0x1638	; 0x1638 <__fp_pscA>
    12d0:	38 f0       	brcs	.+14     	; 0x12e0 <__addsf3+0x20>
    12d2:	0e 94 23 0b 	call	0x1646	; 0x1646 <__fp_pscB>
    12d6:	20 f0       	brcs	.+8      	; 0x12e0 <__addsf3+0x20>
    12d8:	39 f4       	brne	.+14     	; 0x12e8 <__addsf3+0x28>
    12da:	9f 3f       	cpi	r25, 0xFF	; 255
    12dc:	19 f4       	brne	.+6      	; 0x12e4 <__addsf3+0x24>
    12de:	26 f4       	brtc	.+8      	; 0x12e8 <__addsf3+0x28>
    12e0:	0c 94 19 0b 	jmp	0x1632	; 0x1632 <__fp_nan>
    12e4:	0e f4       	brtc	.+2      	; 0x12e8 <__addsf3+0x28>
    12e6:	e0 95       	com	r30
    12e8:	e7 fb       	bst	r30, 7
    12ea:	0c 94 ea 0a 	jmp	0x15d4	; 0x15d4 <__fp_inf>

000012ee <__addsf3x>:
    12ee:	e9 2f       	mov	r30, r25
    12f0:	0e 94 3b 0b 	call	0x1676	; 0x1676 <__fp_split3>
    12f4:	58 f3       	brcs	.-42     	; 0x12cc <__addsf3+0xc>
    12f6:	ba 17       	cp	r27, r26
    12f8:	62 07       	cpc	r22, r18
    12fa:	73 07       	cpc	r23, r19
    12fc:	84 07       	cpc	r24, r20
    12fe:	95 07       	cpc	r25, r21
    1300:	20 f0       	brcs	.+8      	; 0x130a <__addsf3x+0x1c>
    1302:	79 f4       	brne	.+30     	; 0x1322 <__addsf3x+0x34>
    1304:	a6 f5       	brtc	.+104    	; 0x136e <__addsf3x+0x80>
    1306:	0c 94 75 0b 	jmp	0x16ea	; 0x16ea <__fp_zero>
    130a:	0e f4       	brtc	.+2      	; 0x130e <__addsf3x+0x20>
    130c:	e0 95       	com	r30
    130e:	0b 2e       	mov	r0, r27
    1310:	ba 2f       	mov	r27, r26
    1312:	a0 2d       	mov	r26, r0
    1314:	0b 01       	movw	r0, r22
    1316:	b9 01       	movw	r22, r18
    1318:	90 01       	movw	r18, r0
    131a:	0c 01       	movw	r0, r24
    131c:	ca 01       	movw	r24, r20
    131e:	a0 01       	movw	r20, r0
    1320:	11 24       	eor	r1, r1
    1322:	ff 27       	eor	r31, r31
    1324:	59 1b       	sub	r21, r25
    1326:	99 f0       	breq	.+38     	; 0x134e <__addsf3x+0x60>
    1328:	59 3f       	cpi	r21, 0xF9	; 249
    132a:	50 f4       	brcc	.+20     	; 0x1340 <__addsf3x+0x52>
    132c:	50 3e       	cpi	r21, 0xE0	; 224
    132e:	68 f1       	brcs	.+90     	; 0x138a <__addsf3x+0x9c>
    1330:	1a 16       	cp	r1, r26
    1332:	f0 40       	sbci	r31, 0x00	; 0
    1334:	a2 2f       	mov	r26, r18
    1336:	23 2f       	mov	r18, r19
    1338:	34 2f       	mov	r19, r20
    133a:	44 27       	eor	r20, r20
    133c:	58 5f       	subi	r21, 0xF8	; 248
    133e:	f3 cf       	rjmp	.-26     	; 0x1326 <__addsf3x+0x38>
    1340:	46 95       	lsr	r20
    1342:	37 95       	ror	r19
    1344:	27 95       	ror	r18
    1346:	a7 95       	ror	r26
    1348:	f0 40       	sbci	r31, 0x00	; 0
    134a:	53 95       	inc	r21
    134c:	c9 f7       	brne	.-14     	; 0x1340 <__addsf3x+0x52>
    134e:	7e f4       	brtc	.+30     	; 0x136e <__addsf3x+0x80>
    1350:	1f 16       	cp	r1, r31
    1352:	ba 0b       	sbc	r27, r26
    1354:	62 0b       	sbc	r22, r18
    1356:	73 0b       	sbc	r23, r19
    1358:	84 0b       	sbc	r24, r20
    135a:	ba f0       	brmi	.+46     	; 0x138a <__addsf3x+0x9c>
    135c:	91 50       	subi	r25, 0x01	; 1
    135e:	a1 f0       	breq	.+40     	; 0x1388 <__addsf3x+0x9a>
    1360:	ff 0f       	add	r31, r31
    1362:	bb 1f       	adc	r27, r27
    1364:	66 1f       	adc	r22, r22
    1366:	77 1f       	adc	r23, r23
    1368:	88 1f       	adc	r24, r24
    136a:	c2 f7       	brpl	.-16     	; 0x135c <__addsf3x+0x6e>
    136c:	0e c0       	rjmp	.+28     	; 0x138a <__addsf3x+0x9c>
    136e:	ba 0f       	add	r27, r26
    1370:	62 1f       	adc	r22, r18
    1372:	73 1f       	adc	r23, r19
    1374:	84 1f       	adc	r24, r20
    1376:	48 f4       	brcc	.+18     	; 0x138a <__addsf3x+0x9c>
    1378:	87 95       	ror	r24
    137a:	77 95       	ror	r23
    137c:	67 95       	ror	r22
    137e:	b7 95       	ror	r27
    1380:	f7 95       	ror	r31
    1382:	9e 3f       	cpi	r25, 0xFE	; 254
    1384:	08 f0       	brcs	.+2      	; 0x1388 <__addsf3x+0x9a>
    1386:	b0 cf       	rjmp	.-160    	; 0x12e8 <__addsf3+0x28>
    1388:	93 95       	inc	r25
    138a:	88 0f       	add	r24, r24
    138c:	08 f0       	brcs	.+2      	; 0x1390 <__addsf3x+0xa2>
    138e:	99 27       	eor	r25, r25
    1390:	ee 0f       	add	r30, r30
    1392:	97 95       	ror	r25
    1394:	87 95       	ror	r24
    1396:	08 95       	ret

00001398 <ceil>:
    1398:	0e 94 5d 0b 	call	0x16ba	; 0x16ba <__fp_trunc>
    139c:	90 f0       	brcs	.+36     	; 0x13c2 <ceil+0x2a>
    139e:	9f 37       	cpi	r25, 0x7F	; 127
    13a0:	48 f4       	brcc	.+18     	; 0x13b4 <ceil+0x1c>
    13a2:	91 11       	cpse	r25, r1
    13a4:	16 f4       	brtc	.+4      	; 0x13aa <ceil+0x12>
    13a6:	0c 94 76 0b 	jmp	0x16ec	; 0x16ec <__fp_szero>
    13aa:	60 e0       	ldi	r22, 0x00	; 0
    13ac:	70 e0       	ldi	r23, 0x00	; 0
    13ae:	80 e8       	ldi	r24, 0x80	; 128
    13b0:	9f e3       	ldi	r25, 0x3F	; 63
    13b2:	08 95       	ret
    13b4:	26 f0       	brts	.+8      	; 0x13be <ceil+0x26>
    13b6:	1b 16       	cp	r1, r27
    13b8:	61 1d       	adc	r22, r1
    13ba:	71 1d       	adc	r23, r1
    13bc:	81 1d       	adc	r24, r1
    13be:	0c 94 f0 0a 	jmp	0x15e0	; 0x15e0 <__fp_mintl>
    13c2:	0c 94 0b 0b 	jmp	0x1616	; 0x1616 <__fp_mpack>

000013c6 <__cmpsf2>:
    13c6:	0e 94 c6 0a 	call	0x158c	; 0x158c <__fp_cmp>
    13ca:	08 f4       	brcc	.+2      	; 0x13ce <__cmpsf2+0x8>
    13cc:	81 e0       	ldi	r24, 0x01	; 1
    13ce:	08 95       	ret

000013d0 <__divsf3>:
    13d0:	0e 94 fc 09 	call	0x13f8	; 0x13f8 <__divsf3x>
    13d4:	0c 94 2a 0b 	jmp	0x1654	; 0x1654 <__fp_round>
    13d8:	0e 94 23 0b 	call	0x1646	; 0x1646 <__fp_pscB>
    13dc:	58 f0       	brcs	.+22     	; 0x13f4 <__divsf3+0x24>
    13de:	0e 94 1c 0b 	call	0x1638	; 0x1638 <__fp_pscA>
    13e2:	40 f0       	brcs	.+16     	; 0x13f4 <__divsf3+0x24>
    13e4:	29 f4       	brne	.+10     	; 0x13f0 <__divsf3+0x20>
    13e6:	5f 3f       	cpi	r21, 0xFF	; 255
    13e8:	29 f0       	breq	.+10     	; 0x13f4 <__divsf3+0x24>
    13ea:	0c 94 ea 0a 	jmp	0x15d4	; 0x15d4 <__fp_inf>
    13ee:	51 11       	cpse	r21, r1
    13f0:	0c 94 76 0b 	jmp	0x16ec	; 0x16ec <__fp_szero>
    13f4:	0c 94 19 0b 	jmp	0x1632	; 0x1632 <__fp_nan>

000013f8 <__divsf3x>:
    13f8:	0e 94 3b 0b 	call	0x1676	; 0x1676 <__fp_split3>
    13fc:	68 f3       	brcs	.-38     	; 0x13d8 <__divsf3+0x8>

000013fe <__divsf3_pse>:
    13fe:	99 23       	and	r25, r25
    1400:	b1 f3       	breq	.-20     	; 0x13ee <__divsf3+0x1e>
    1402:	55 23       	and	r21, r21
    1404:	91 f3       	breq	.-28     	; 0x13ea <__divsf3+0x1a>
    1406:	95 1b       	sub	r25, r21
    1408:	55 0b       	sbc	r21, r21
    140a:	bb 27       	eor	r27, r27
    140c:	aa 27       	eor	r26, r26
    140e:	62 17       	cp	r22, r18
    1410:	73 07       	cpc	r23, r19
    1412:	84 07       	cpc	r24, r20
    1414:	38 f0       	brcs	.+14     	; 0x1424 <__divsf3_pse+0x26>
    1416:	9f 5f       	subi	r25, 0xFF	; 255
    1418:	5f 4f       	sbci	r21, 0xFF	; 255
    141a:	22 0f       	add	r18, r18
    141c:	33 1f       	adc	r19, r19
    141e:	44 1f       	adc	r20, r20
    1420:	aa 1f       	adc	r26, r26
    1422:	a9 f3       	breq	.-22     	; 0x140e <__divsf3_pse+0x10>
    1424:	35 d0       	rcall	.+106    	; 0x1490 <__divsf3_pse+0x92>
    1426:	0e 2e       	mov	r0, r30
    1428:	3a f0       	brmi	.+14     	; 0x1438 <__divsf3_pse+0x3a>
    142a:	e0 e8       	ldi	r30, 0x80	; 128
    142c:	32 d0       	rcall	.+100    	; 0x1492 <__divsf3_pse+0x94>
    142e:	91 50       	subi	r25, 0x01	; 1
    1430:	50 40       	sbci	r21, 0x00	; 0
    1432:	e6 95       	lsr	r30
    1434:	00 1c       	adc	r0, r0
    1436:	ca f7       	brpl	.-14     	; 0x142a <__divsf3_pse+0x2c>
    1438:	2b d0       	rcall	.+86     	; 0x1490 <__divsf3_pse+0x92>
    143a:	fe 2f       	mov	r31, r30
    143c:	29 d0       	rcall	.+82     	; 0x1490 <__divsf3_pse+0x92>
    143e:	66 0f       	add	r22, r22
    1440:	77 1f       	adc	r23, r23
    1442:	88 1f       	adc	r24, r24
    1444:	bb 1f       	adc	r27, r27
    1446:	26 17       	cp	r18, r22
    1448:	37 07       	cpc	r19, r23
    144a:	48 07       	cpc	r20, r24
    144c:	ab 07       	cpc	r26, r27
    144e:	b0 e8       	ldi	r27, 0x80	; 128
    1450:	09 f0       	breq	.+2      	; 0x1454 <__divsf3_pse+0x56>
    1452:	bb 0b       	sbc	r27, r27
    1454:	80 2d       	mov	r24, r0
    1456:	bf 01       	movw	r22, r30
    1458:	ff 27       	eor	r31, r31
    145a:	93 58       	subi	r25, 0x83	; 131
    145c:	5f 4f       	sbci	r21, 0xFF	; 255
    145e:	3a f0       	brmi	.+14     	; 0x146e <__divsf3_pse+0x70>
    1460:	9e 3f       	cpi	r25, 0xFE	; 254
    1462:	51 05       	cpc	r21, r1
    1464:	78 f0       	brcs	.+30     	; 0x1484 <__divsf3_pse+0x86>
    1466:	0c 94 ea 0a 	jmp	0x15d4	; 0x15d4 <__fp_inf>
    146a:	0c 94 76 0b 	jmp	0x16ec	; 0x16ec <__fp_szero>
    146e:	5f 3f       	cpi	r21, 0xFF	; 255
    1470:	e4 f3       	brlt	.-8      	; 0x146a <__divsf3_pse+0x6c>
    1472:	98 3e       	cpi	r25, 0xE8	; 232
    1474:	d4 f3       	brlt	.-12     	; 0x146a <__divsf3_pse+0x6c>
    1476:	86 95       	lsr	r24
    1478:	77 95       	ror	r23
    147a:	67 95       	ror	r22
    147c:	b7 95       	ror	r27
    147e:	f7 95       	ror	r31
    1480:	9f 5f       	subi	r25, 0xFF	; 255
    1482:	c9 f7       	brne	.-14     	; 0x1476 <__divsf3_pse+0x78>
    1484:	88 0f       	add	r24, r24
    1486:	91 1d       	adc	r25, r1
    1488:	96 95       	lsr	r25
    148a:	87 95       	ror	r24
    148c:	97 f9       	bld	r25, 7
    148e:	08 95       	ret
    1490:	e1 e0       	ldi	r30, 0x01	; 1
    1492:	66 0f       	add	r22, r22
    1494:	77 1f       	adc	r23, r23
    1496:	88 1f       	adc	r24, r24
    1498:	bb 1f       	adc	r27, r27
    149a:	62 17       	cp	r22, r18
    149c:	73 07       	cpc	r23, r19
    149e:	84 07       	cpc	r24, r20
    14a0:	ba 07       	cpc	r27, r26
    14a2:	20 f0       	brcs	.+8      	; 0x14ac <__divsf3_pse+0xae>
    14a4:	62 1b       	sub	r22, r18
    14a6:	73 0b       	sbc	r23, r19
    14a8:	84 0b       	sbc	r24, r20
    14aa:	ba 0b       	sbc	r27, r26
    14ac:	ee 1f       	adc	r30, r30
    14ae:	88 f7       	brcc	.-30     	; 0x1492 <__divsf3_pse+0x94>
    14b0:	e0 95       	com	r30
    14b2:	08 95       	ret

000014b4 <__fixunssfsi>:
    14b4:	0e 94 43 0b 	call	0x1686	; 0x1686 <__fp_splitA>
    14b8:	88 f0       	brcs	.+34     	; 0x14dc <__fixunssfsi+0x28>
    14ba:	9f 57       	subi	r25, 0x7F	; 127
    14bc:	98 f0       	brcs	.+38     	; 0x14e4 <__fixunssfsi+0x30>
    14be:	b9 2f       	mov	r27, r25
    14c0:	99 27       	eor	r25, r25
    14c2:	b7 51       	subi	r27, 0x17	; 23
    14c4:	b0 f0       	brcs	.+44     	; 0x14f2 <__fixunssfsi+0x3e>
    14c6:	e1 f0       	breq	.+56     	; 0x1500 <__fixunssfsi+0x4c>
    14c8:	66 0f       	add	r22, r22
    14ca:	77 1f       	adc	r23, r23
    14cc:	88 1f       	adc	r24, r24
    14ce:	99 1f       	adc	r25, r25
    14d0:	1a f0       	brmi	.+6      	; 0x14d8 <__fixunssfsi+0x24>
    14d2:	ba 95       	dec	r27
    14d4:	c9 f7       	brne	.-14     	; 0x14c8 <__fixunssfsi+0x14>
    14d6:	14 c0       	rjmp	.+40     	; 0x1500 <__fixunssfsi+0x4c>
    14d8:	b1 30       	cpi	r27, 0x01	; 1
    14da:	91 f0       	breq	.+36     	; 0x1500 <__fixunssfsi+0x4c>
    14dc:	0e 94 75 0b 	call	0x16ea	; 0x16ea <__fp_zero>
    14e0:	b1 e0       	ldi	r27, 0x01	; 1
    14e2:	08 95       	ret
    14e4:	0c 94 75 0b 	jmp	0x16ea	; 0x16ea <__fp_zero>
    14e8:	67 2f       	mov	r22, r23
    14ea:	78 2f       	mov	r23, r24
    14ec:	88 27       	eor	r24, r24
    14ee:	b8 5f       	subi	r27, 0xF8	; 248
    14f0:	39 f0       	breq	.+14     	; 0x1500 <__fixunssfsi+0x4c>
    14f2:	b9 3f       	cpi	r27, 0xF9	; 249
    14f4:	cc f3       	brlt	.-14     	; 0x14e8 <__fixunssfsi+0x34>
    14f6:	86 95       	lsr	r24
    14f8:	77 95       	ror	r23
    14fa:	67 95       	ror	r22
    14fc:	b3 95       	inc	r27
    14fe:	d9 f7       	brne	.-10     	; 0x14f6 <__fixunssfsi+0x42>
    1500:	3e f4       	brtc	.+14     	; 0x1510 <__fixunssfsi+0x5c>
    1502:	90 95       	com	r25
    1504:	80 95       	com	r24
    1506:	70 95       	com	r23
    1508:	61 95       	neg	r22
    150a:	7f 4f       	sbci	r23, 0xFF	; 255
    150c:	8f 4f       	sbci	r24, 0xFF	; 255
    150e:	9f 4f       	sbci	r25, 0xFF	; 255
    1510:	08 95       	ret

00001512 <__floatunsisf>:
    1512:	e8 94       	clt
    1514:	09 c0       	rjmp	.+18     	; 0x1528 <__floatsisf+0x12>

00001516 <__floatsisf>:
    1516:	97 fb       	bst	r25, 7
    1518:	3e f4       	brtc	.+14     	; 0x1528 <__floatsisf+0x12>
    151a:	90 95       	com	r25
    151c:	80 95       	com	r24
    151e:	70 95       	com	r23
    1520:	61 95       	neg	r22
    1522:	7f 4f       	sbci	r23, 0xFF	; 255
    1524:	8f 4f       	sbci	r24, 0xFF	; 255
    1526:	9f 4f       	sbci	r25, 0xFF	; 255
    1528:	99 23       	and	r25, r25
    152a:	a9 f0       	breq	.+42     	; 0x1556 <__floatsisf+0x40>
    152c:	f9 2f       	mov	r31, r25
    152e:	96 e9       	ldi	r25, 0x96	; 150
    1530:	bb 27       	eor	r27, r27
    1532:	93 95       	inc	r25
    1534:	f6 95       	lsr	r31
    1536:	87 95       	ror	r24
    1538:	77 95       	ror	r23
    153a:	67 95       	ror	r22
    153c:	b7 95       	ror	r27
    153e:	f1 11       	cpse	r31, r1
    1540:	f8 cf       	rjmp	.-16     	; 0x1532 <__floatsisf+0x1c>
    1542:	fa f4       	brpl	.+62     	; 0x1582 <__floatsisf+0x6c>
    1544:	bb 0f       	add	r27, r27
    1546:	11 f4       	brne	.+4      	; 0x154c <__floatsisf+0x36>
    1548:	60 ff       	sbrs	r22, 0
    154a:	1b c0       	rjmp	.+54     	; 0x1582 <__floatsisf+0x6c>
    154c:	6f 5f       	subi	r22, 0xFF	; 255
    154e:	7f 4f       	sbci	r23, 0xFF	; 255
    1550:	8f 4f       	sbci	r24, 0xFF	; 255
    1552:	9f 4f       	sbci	r25, 0xFF	; 255
    1554:	16 c0       	rjmp	.+44     	; 0x1582 <__floatsisf+0x6c>
    1556:	88 23       	and	r24, r24
    1558:	11 f0       	breq	.+4      	; 0x155e <__floatsisf+0x48>
    155a:	96 e9       	ldi	r25, 0x96	; 150
    155c:	11 c0       	rjmp	.+34     	; 0x1580 <__floatsisf+0x6a>
    155e:	77 23       	and	r23, r23
    1560:	21 f0       	breq	.+8      	; 0x156a <__floatsisf+0x54>
    1562:	9e e8       	ldi	r25, 0x8E	; 142
    1564:	87 2f       	mov	r24, r23
    1566:	76 2f       	mov	r23, r22
    1568:	05 c0       	rjmp	.+10     	; 0x1574 <__floatsisf+0x5e>
    156a:	66 23       	and	r22, r22
    156c:	71 f0       	breq	.+28     	; 0x158a <__floatsisf+0x74>
    156e:	96 e8       	ldi	r25, 0x86	; 134
    1570:	86 2f       	mov	r24, r22
    1572:	70 e0       	ldi	r23, 0x00	; 0
    1574:	60 e0       	ldi	r22, 0x00	; 0
    1576:	2a f0       	brmi	.+10     	; 0x1582 <__floatsisf+0x6c>
    1578:	9a 95       	dec	r25
    157a:	66 0f       	add	r22, r22
    157c:	77 1f       	adc	r23, r23
    157e:	88 1f       	adc	r24, r24
    1580:	da f7       	brpl	.-10     	; 0x1578 <__floatsisf+0x62>
    1582:	88 0f       	add	r24, r24
    1584:	96 95       	lsr	r25
    1586:	87 95       	ror	r24
    1588:	97 f9       	bld	r25, 7
    158a:	08 95       	ret

0000158c <__fp_cmp>:
    158c:	99 0f       	add	r25, r25
    158e:	00 08       	sbc	r0, r0
    1590:	55 0f       	add	r21, r21
    1592:	aa 0b       	sbc	r26, r26
    1594:	e0 e8       	ldi	r30, 0x80	; 128
    1596:	fe ef       	ldi	r31, 0xFE	; 254
    1598:	16 16       	cp	r1, r22
    159a:	17 06       	cpc	r1, r23
    159c:	e8 07       	cpc	r30, r24
    159e:	f9 07       	cpc	r31, r25
    15a0:	c0 f0       	brcs	.+48     	; 0x15d2 <__fp_cmp+0x46>
    15a2:	12 16       	cp	r1, r18
    15a4:	13 06       	cpc	r1, r19
    15a6:	e4 07       	cpc	r30, r20
    15a8:	f5 07       	cpc	r31, r21
    15aa:	98 f0       	brcs	.+38     	; 0x15d2 <__fp_cmp+0x46>
    15ac:	62 1b       	sub	r22, r18
    15ae:	73 0b       	sbc	r23, r19
    15b0:	84 0b       	sbc	r24, r20
    15b2:	95 0b       	sbc	r25, r21
    15b4:	39 f4       	brne	.+14     	; 0x15c4 <__fp_cmp+0x38>
    15b6:	0a 26       	eor	r0, r26
    15b8:	61 f0       	breq	.+24     	; 0x15d2 <__fp_cmp+0x46>
    15ba:	23 2b       	or	r18, r19
    15bc:	24 2b       	or	r18, r20
    15be:	25 2b       	or	r18, r21
    15c0:	21 f4       	brne	.+8      	; 0x15ca <__fp_cmp+0x3e>
    15c2:	08 95       	ret
    15c4:	0a 26       	eor	r0, r26
    15c6:	09 f4       	brne	.+2      	; 0x15ca <__fp_cmp+0x3e>
    15c8:	a1 40       	sbci	r26, 0x01	; 1
    15ca:	a6 95       	lsr	r26
    15cc:	8f ef       	ldi	r24, 0xFF	; 255
    15ce:	81 1d       	adc	r24, r1
    15d0:	81 1d       	adc	r24, r1
    15d2:	08 95       	ret

000015d4 <__fp_inf>:
    15d4:	97 f9       	bld	r25, 7
    15d6:	9f 67       	ori	r25, 0x7F	; 127
    15d8:	80 e8       	ldi	r24, 0x80	; 128
    15da:	70 e0       	ldi	r23, 0x00	; 0
    15dc:	60 e0       	ldi	r22, 0x00	; 0
    15de:	08 95       	ret

000015e0 <__fp_mintl>:
    15e0:	88 23       	and	r24, r24
    15e2:	71 f4       	brne	.+28     	; 0x1600 <__fp_mintl+0x20>
    15e4:	77 23       	and	r23, r23
    15e6:	21 f0       	breq	.+8      	; 0x15f0 <__fp_mintl+0x10>
    15e8:	98 50       	subi	r25, 0x08	; 8
    15ea:	87 2b       	or	r24, r23
    15ec:	76 2f       	mov	r23, r22
    15ee:	07 c0       	rjmp	.+14     	; 0x15fe <__fp_mintl+0x1e>
    15f0:	66 23       	and	r22, r22
    15f2:	11 f4       	brne	.+4      	; 0x15f8 <__fp_mintl+0x18>
    15f4:	99 27       	eor	r25, r25
    15f6:	0d c0       	rjmp	.+26     	; 0x1612 <__fp_mintl+0x32>
    15f8:	90 51       	subi	r25, 0x10	; 16
    15fa:	86 2b       	or	r24, r22
    15fc:	70 e0       	ldi	r23, 0x00	; 0
    15fe:	60 e0       	ldi	r22, 0x00	; 0
    1600:	2a f0       	brmi	.+10     	; 0x160c <__fp_mintl+0x2c>
    1602:	9a 95       	dec	r25
    1604:	66 0f       	add	r22, r22
    1606:	77 1f       	adc	r23, r23
    1608:	88 1f       	adc	r24, r24
    160a:	da f7       	brpl	.-10     	; 0x1602 <__fp_mintl+0x22>
    160c:	88 0f       	add	r24, r24
    160e:	96 95       	lsr	r25
    1610:	87 95       	ror	r24
    1612:	97 f9       	bld	r25, 7
    1614:	08 95       	ret

00001616 <__fp_mpack>:
    1616:	9f 3f       	cpi	r25, 0xFF	; 255
    1618:	31 f0       	breq	.+12     	; 0x1626 <__fp_mpack_finite+0xc>

0000161a <__fp_mpack_finite>:
    161a:	91 50       	subi	r25, 0x01	; 1
    161c:	20 f4       	brcc	.+8      	; 0x1626 <__fp_mpack_finite+0xc>
    161e:	87 95       	ror	r24
    1620:	77 95       	ror	r23
    1622:	67 95       	ror	r22
    1624:	b7 95       	ror	r27
    1626:	88 0f       	add	r24, r24
    1628:	91 1d       	adc	r25, r1
    162a:	96 95       	lsr	r25
    162c:	87 95       	ror	r24
    162e:	97 f9       	bld	r25, 7
    1630:	08 95       	ret

00001632 <__fp_nan>:
    1632:	9f ef       	ldi	r25, 0xFF	; 255
    1634:	80 ec       	ldi	r24, 0xC0	; 192
    1636:	08 95       	ret

00001638 <__fp_pscA>:
    1638:	00 24       	eor	r0, r0
    163a:	0a 94       	dec	r0
    163c:	16 16       	cp	r1, r22
    163e:	17 06       	cpc	r1, r23
    1640:	18 06       	cpc	r1, r24
    1642:	09 06       	cpc	r0, r25
    1644:	08 95       	ret

00001646 <__fp_pscB>:
    1646:	00 24       	eor	r0, r0
    1648:	0a 94       	dec	r0
    164a:	12 16       	cp	r1, r18
    164c:	13 06       	cpc	r1, r19
    164e:	14 06       	cpc	r1, r20
    1650:	05 06       	cpc	r0, r21
    1652:	08 95       	ret

00001654 <__fp_round>:
    1654:	09 2e       	mov	r0, r25
    1656:	03 94       	inc	r0
    1658:	00 0c       	add	r0, r0
    165a:	11 f4       	brne	.+4      	; 0x1660 <__fp_round+0xc>
    165c:	88 23       	and	r24, r24
    165e:	52 f0       	brmi	.+20     	; 0x1674 <__fp_round+0x20>
    1660:	bb 0f       	add	r27, r27
    1662:	40 f4       	brcc	.+16     	; 0x1674 <__fp_round+0x20>
    1664:	bf 2b       	or	r27, r31
    1666:	11 f4       	brne	.+4      	; 0x166c <__fp_round+0x18>
    1668:	60 ff       	sbrs	r22, 0
    166a:	04 c0       	rjmp	.+8      	; 0x1674 <__fp_round+0x20>
    166c:	6f 5f       	subi	r22, 0xFF	; 255
    166e:	7f 4f       	sbci	r23, 0xFF	; 255
    1670:	8f 4f       	sbci	r24, 0xFF	; 255
    1672:	9f 4f       	sbci	r25, 0xFF	; 255
    1674:	08 95       	ret

00001676 <__fp_split3>:
    1676:	57 fd       	sbrc	r21, 7
    1678:	90 58       	subi	r25, 0x80	; 128
    167a:	44 0f       	add	r20, r20
    167c:	55 1f       	adc	r21, r21
    167e:	59 f0       	breq	.+22     	; 0x1696 <__fp_splitA+0x10>
    1680:	5f 3f       	cpi	r21, 0xFF	; 255
    1682:	71 f0       	breq	.+28     	; 0x16a0 <__fp_splitA+0x1a>
    1684:	47 95       	ror	r20

00001686 <__fp_splitA>:
    1686:	88 0f       	add	r24, r24
    1688:	97 fb       	bst	r25, 7
    168a:	99 1f       	adc	r25, r25
    168c:	61 f0       	breq	.+24     	; 0x16a6 <__fp_splitA+0x20>
    168e:	9f 3f       	cpi	r25, 0xFF	; 255
    1690:	79 f0       	breq	.+30     	; 0x16b0 <__fp_splitA+0x2a>
    1692:	87 95       	ror	r24
    1694:	08 95       	ret
    1696:	12 16       	cp	r1, r18
    1698:	13 06       	cpc	r1, r19
    169a:	14 06       	cpc	r1, r20
    169c:	55 1f       	adc	r21, r21
    169e:	f2 cf       	rjmp	.-28     	; 0x1684 <__fp_split3+0xe>
    16a0:	46 95       	lsr	r20
    16a2:	f1 df       	rcall	.-30     	; 0x1686 <__fp_splitA>
    16a4:	08 c0       	rjmp	.+16     	; 0x16b6 <__fp_splitA+0x30>
    16a6:	16 16       	cp	r1, r22
    16a8:	17 06       	cpc	r1, r23
    16aa:	18 06       	cpc	r1, r24
    16ac:	99 1f       	adc	r25, r25
    16ae:	f1 cf       	rjmp	.-30     	; 0x1692 <__fp_splitA+0xc>
    16b0:	86 95       	lsr	r24
    16b2:	71 05       	cpc	r23, r1
    16b4:	61 05       	cpc	r22, r1
    16b6:	08 94       	sec
    16b8:	08 95       	ret

000016ba <__fp_trunc>:
    16ba:	0e 94 43 0b 	call	0x1686	; 0x1686 <__fp_splitA>
    16be:	a0 f0       	brcs	.+40     	; 0x16e8 <__fp_trunc+0x2e>
    16c0:	be e7       	ldi	r27, 0x7E	; 126
    16c2:	b9 17       	cp	r27, r25
    16c4:	88 f4       	brcc	.+34     	; 0x16e8 <__fp_trunc+0x2e>
    16c6:	bb 27       	eor	r27, r27
    16c8:	9f 38       	cpi	r25, 0x8F	; 143
    16ca:	60 f4       	brcc	.+24     	; 0x16e4 <__fp_trunc+0x2a>
    16cc:	16 16       	cp	r1, r22
    16ce:	b1 1d       	adc	r27, r1
    16d0:	67 2f       	mov	r22, r23
    16d2:	78 2f       	mov	r23, r24
    16d4:	88 27       	eor	r24, r24
    16d6:	98 5f       	subi	r25, 0xF8	; 248
    16d8:	f7 cf       	rjmp	.-18     	; 0x16c8 <__fp_trunc+0xe>
    16da:	86 95       	lsr	r24
    16dc:	77 95       	ror	r23
    16de:	67 95       	ror	r22
    16e0:	b1 1d       	adc	r27, r1
    16e2:	93 95       	inc	r25
    16e4:	96 39       	cpi	r25, 0x96	; 150
    16e6:	c8 f3       	brcs	.-14     	; 0x16da <__fp_trunc+0x20>
    16e8:	08 95       	ret

000016ea <__fp_zero>:
    16ea:	e8 94       	clt

000016ec <__fp_szero>:
    16ec:	bb 27       	eor	r27, r27
    16ee:	66 27       	eor	r22, r22
    16f0:	77 27       	eor	r23, r23
    16f2:	cb 01       	movw	r24, r22
    16f4:	97 f9       	bld	r25, 7
    16f6:	08 95       	ret

000016f8 <__gesf2>:
    16f8:	0e 94 c6 0a 	call	0x158c	; 0x158c <__fp_cmp>
    16fc:	08 f4       	brcc	.+2      	; 0x1700 <__gesf2+0x8>
    16fe:	8f ef       	ldi	r24, 0xFF	; 255
    1700:	08 95       	ret

00001702 <__mulsf3>:
    1702:	0e 94 94 0b 	call	0x1728	; 0x1728 <__mulsf3x>
    1706:	0c 94 2a 0b 	jmp	0x1654	; 0x1654 <__fp_round>
    170a:	0e 94 1c 0b 	call	0x1638	; 0x1638 <__fp_pscA>
    170e:	38 f0       	brcs	.+14     	; 0x171e <__mulsf3+0x1c>
    1710:	0e 94 23 0b 	call	0x1646	; 0x1646 <__fp_pscB>
    1714:	20 f0       	brcs	.+8      	; 0x171e <__mulsf3+0x1c>
    1716:	95 23       	and	r25, r21
    1718:	11 f0       	breq	.+4      	; 0x171e <__mulsf3+0x1c>
    171a:	0c 94 ea 0a 	jmp	0x15d4	; 0x15d4 <__fp_inf>
    171e:	0c 94 19 0b 	jmp	0x1632	; 0x1632 <__fp_nan>
    1722:	11 24       	eor	r1, r1
    1724:	0c 94 76 0b 	jmp	0x16ec	; 0x16ec <__fp_szero>

00001728 <__mulsf3x>:
    1728:	0e 94 3b 0b 	call	0x1676	; 0x1676 <__fp_split3>
    172c:	70 f3       	brcs	.-36     	; 0x170a <__mulsf3+0x8>

0000172e <__mulsf3_pse>:
    172e:	95 9f       	mul	r25, r21
    1730:	c1 f3       	breq	.-16     	; 0x1722 <__mulsf3+0x20>
    1732:	95 0f       	add	r25, r21
    1734:	50 e0       	ldi	r21, 0x00	; 0
    1736:	55 1f       	adc	r21, r21
    1738:	62 9f       	mul	r22, r18
    173a:	f0 01       	movw	r30, r0
    173c:	72 9f       	mul	r23, r18
    173e:	bb 27       	eor	r27, r27
    1740:	f0 0d       	add	r31, r0
    1742:	b1 1d       	adc	r27, r1
    1744:	63 9f       	mul	r22, r19
    1746:	aa 27       	eor	r26, r26
    1748:	f0 0d       	add	r31, r0
    174a:	b1 1d       	adc	r27, r1
    174c:	aa 1f       	adc	r26, r26
    174e:	64 9f       	mul	r22, r20
    1750:	66 27       	eor	r22, r22
    1752:	b0 0d       	add	r27, r0
    1754:	a1 1d       	adc	r26, r1
    1756:	66 1f       	adc	r22, r22
    1758:	82 9f       	mul	r24, r18
    175a:	22 27       	eor	r18, r18
    175c:	b0 0d       	add	r27, r0
    175e:	a1 1d       	adc	r26, r1
    1760:	62 1f       	adc	r22, r18
    1762:	73 9f       	mul	r23, r19
    1764:	b0 0d       	add	r27, r0
    1766:	a1 1d       	adc	r26, r1
    1768:	62 1f       	adc	r22, r18
    176a:	83 9f       	mul	r24, r19
    176c:	a0 0d       	add	r26, r0
    176e:	61 1d       	adc	r22, r1
    1770:	22 1f       	adc	r18, r18
    1772:	74 9f       	mul	r23, r20
    1774:	33 27       	eor	r19, r19
    1776:	a0 0d       	add	r26, r0
    1778:	61 1d       	adc	r22, r1
    177a:	23 1f       	adc	r18, r19
    177c:	84 9f       	mul	r24, r20
    177e:	60 0d       	add	r22, r0
    1780:	21 1d       	adc	r18, r1
    1782:	82 2f       	mov	r24, r18
    1784:	76 2f       	mov	r23, r22
    1786:	6a 2f       	mov	r22, r26
    1788:	11 24       	eor	r1, r1
    178a:	9f 57       	subi	r25, 0x7F	; 127
    178c:	50 40       	sbci	r21, 0x00	; 0
    178e:	9a f0       	brmi	.+38     	; 0x17b6 <__mulsf3_pse+0x88>
    1790:	f1 f0       	breq	.+60     	; 0x17ce <__mulsf3_pse+0xa0>
    1792:	88 23       	and	r24, r24
    1794:	4a f0       	brmi	.+18     	; 0x17a8 <__mulsf3_pse+0x7a>
    1796:	ee 0f       	add	r30, r30
    1798:	ff 1f       	adc	r31, r31
    179a:	bb 1f       	adc	r27, r27
    179c:	66 1f       	adc	r22, r22
    179e:	77 1f       	adc	r23, r23
    17a0:	88 1f       	adc	r24, r24
    17a2:	91 50       	subi	r25, 0x01	; 1
    17a4:	50 40       	sbci	r21, 0x00	; 0
    17a6:	a9 f7       	brne	.-22     	; 0x1792 <__mulsf3_pse+0x64>
    17a8:	9e 3f       	cpi	r25, 0xFE	; 254
    17aa:	51 05       	cpc	r21, r1
    17ac:	80 f0       	brcs	.+32     	; 0x17ce <__mulsf3_pse+0xa0>
    17ae:	0c 94 ea 0a 	jmp	0x15d4	; 0x15d4 <__fp_inf>
    17b2:	0c 94 76 0b 	jmp	0x16ec	; 0x16ec <__fp_szero>
    17b6:	5f 3f       	cpi	r21, 0xFF	; 255
    17b8:	e4 f3       	brlt	.-8      	; 0x17b2 <__mulsf3_pse+0x84>
    17ba:	98 3e       	cpi	r25, 0xE8	; 232
    17bc:	d4 f3       	brlt	.-12     	; 0x17b2 <__mulsf3_pse+0x84>
    17be:	86 95       	lsr	r24
    17c0:	77 95       	ror	r23
    17c2:	67 95       	ror	r22
    17c4:	b7 95       	ror	r27
    17c6:	f7 95       	ror	r31
    17c8:	e7 95       	ror	r30
    17ca:	9f 5f       	subi	r25, 0xFF	; 255
    17cc:	c1 f7       	brne	.-16     	; 0x17be <__mulsf3_pse+0x90>
    17ce:	fe 2b       	or	r31, r30
    17d0:	88 0f       	add	r24, r24
    17d2:	91 1d       	adc	r25, r1
    17d4:	96 95       	lsr	r25
    17d6:	87 95       	ror	r24
    17d8:	97 f9       	bld	r25, 7
    17da:	08 95       	ret

000017dc <__udivmodsi4>:
    17dc:	a1 e2       	ldi	r26, 0x21	; 33
    17de:	1a 2e       	mov	r1, r26
    17e0:	aa 1b       	sub	r26, r26
    17e2:	bb 1b       	sub	r27, r27
    17e4:	fd 01       	movw	r30, r26
    17e6:	0d c0       	rjmp	.+26     	; 0x1802 <__udivmodsi4_ep>

000017e8 <__udivmodsi4_loop>:
    17e8:	aa 1f       	adc	r26, r26
    17ea:	bb 1f       	adc	r27, r27
    17ec:	ee 1f       	adc	r30, r30
    17ee:	ff 1f       	adc	r31, r31
    17f0:	a2 17       	cp	r26, r18
    17f2:	b3 07       	cpc	r27, r19
    17f4:	e4 07       	cpc	r30, r20
    17f6:	f5 07       	cpc	r31, r21
    17f8:	20 f0       	brcs	.+8      	; 0x1802 <__udivmodsi4_ep>
    17fa:	a2 1b       	sub	r26, r18
    17fc:	b3 0b       	sbc	r27, r19
    17fe:	e4 0b       	sbc	r30, r20
    1800:	f5 0b       	sbc	r31, r21

00001802 <__udivmodsi4_ep>:
    1802:	66 1f       	adc	r22, r22
    1804:	77 1f       	adc	r23, r23
    1806:	88 1f       	adc	r24, r24
    1808:	99 1f       	adc	r25, r25
    180a:	1a 94       	dec	r1
    180c:	69 f7       	brne	.-38     	; 0x17e8 <__udivmodsi4_loop>
    180e:	60 95       	com	r22
    1810:	70 95       	com	r23
    1812:	80 95       	com	r24
    1814:	90 95       	com	r25
    1816:	9b 01       	movw	r18, r22
    1818:	ac 01       	movw	r20, r24
    181a:	bd 01       	movw	r22, r26
    181c:	cf 01       	movw	r24, r30
    181e:	08 95       	ret

00001820 <__tablejump2__>:
    1820:	ee 0f       	add	r30, r30
    1822:	ff 1f       	adc	r31, r31
    1824:	05 90       	lpm	r0, Z+
    1826:	f4 91       	lpm	r31, Z
    1828:	e0 2d       	mov	r30, r0
    182a:	09 94       	ijmp

0000182c <_exit>:
    182c:	f8 94       	cli

0000182e <__stop_program>:
    182e:	ff cf       	rjmp	.-2      	; 0x182e <__stop_program>
